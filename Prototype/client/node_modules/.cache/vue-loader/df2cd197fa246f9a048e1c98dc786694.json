{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Browse.vue?vue&type=style&index=0&id=02b1a956&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Browse.vue","mtime":1591791910702},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLypHZW5lcmFsICovCi5jb250YWluZXJ7CiAgd2lkdGg6MTAwJTsKICB0cmFuc2l0aW9uOiAuMnM7Cn0KLkJyb3dzZXsKICB3aWR0aDoxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgovKlpvb20gYnV0dG9uICovCi56b29tQnV0dG9uewogIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgd2lkdGg6IDEwZW07IAogIGNvbG9yOiBibGFjazsgCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgdHJhbnNpdGlvbjogMC4zczsKICBtYXJnaW4tdG9wOiA1cHg7CiAgbWFyZ2luLWJvdHRvbTogNXB4Owp9Ci56b29tQnV0dG9uOmhvdmVyewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKfQoKLypMZWdlbmQqLwoudGV4dEJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICBib3JkZXItd2lkdGg6IDJweDsKICBib3JkZXItY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDEwcHg7CiAgbWFyZ2luOiAxMHB4OwogIG1heC13aWR0aDogMTIwMHB4Owp9CnAsaDEgewogIGNvbG9yOndoaXRlOwogIGZvbnQtc2l6ZTogMWVtOwogIHRleHQtYWxpZ246bGVmdDsKICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7CiAgbWFyZ2luOiA1cHg7Cn0KI2V4YW1wbGV7CiAgaGVpZ2h0OiAxLjJlbTsKfQouaGVhZGVyVGV4dHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQpoMXsKICBmb250LXNpemU6MmVtOwogIGNvbG9yOnJlZDsKfQppewogIGNvbG9yOndoaXRlOwp9CgovKlJlZmVyZW5jZSBNb3ZpZSovCi5tZXRhVGV4dHsKICBmb250LXNpemU6IDFlbTsKICBwYWRkaW5nOiAwcHg7Cn0KI21ldGFDb250YWluZXJ7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICBib3JkZXItd2lkdGg6IDJweDsKICBib3JkZXItY29sb3I6IHdoaXRlOwogIHBhZGRpbmc6IDEwcHg7CiAgZGlzcGxheTogZmxleDsKICB3aWR0aDogOTUlOwogIG1heC13aWR0aDogMTIwMHB4OwogIG1hcmdpbjoxMHB4Owp9CiN0ZXh0Q29udGFpbmVyewogIHdpZHRoOiA1MCU7CiAgbWluLXdpZHRoOiA1MCU7CiAgbWF4LXdpZHRoOiA1MCU7Cn0KI2ltYWdlQ29udGFpbmVyewogIHdpZHRoOjEwMCU7CiAgbWluLXdpZHRoOiA1NSU7CiAgbWluLWhlaWdodDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwoKfQpoMnsKICBjb2xvcjogcmVkOwp9CmgzewogIGNvbG9yOiB3aGl0ZTsKICBmb250LXNpemU6IDNlbQp9Ci50aXRsZUhlYWRlcnsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDEuM2VtOwp9CgovKkxpc3QgU3R5bGUgKi8KLnJlY0NvbnRhaW5lcnsKICBtYXJnaW4tdG9wOjEwcHg7CiAgd2lkdGg6IDEwMCU7CiAgdHJhbnNmb3JtLW9yaWdpbjogdG9wOwp9Ci5saXN0ewogIHdpZHRoOjEwMCU7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Ci5saXN0Q29udGFpbmVyewogIHdpZHRoOjEwMCU7CiAgZGlzcGxheTpmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgZmxleC1ncm93OjE7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7CiAgbWFyZ2luLWJvdHRvbTogMTBweDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIG1heC13aWR0aDogMTIyNHB4Owp9Ci5saXN0SW5mb0N7CiAgaGVpZ2h0OiAxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBhbGlnbi1pdGVtczogbGVmdDsKfQoubGlzdEluZm9DICogewogIHdoaXRlLXNwYWNlOiBub3dyYXA7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgd2lkdGg6NjBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmxpc3RJbmZvUnsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBmb250LXNpemU6IDEuNWVtOwp9Ci8qRmlsbSBzdHlsZSAqLwouZmlsbVNldHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6MTAwJTsKICBtYXgtd2lkdGg6IDIwJTsKICBtaW4td2lkdGg6IDE1JTsKICBtYXJnaW4tbGVmdDogNXB4Owp9Ci5maWxtewogIG1pbi1oZWlnaHQ6MTAwJTsKICBtaW4td2lkdGg6MTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjsKICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OwogIGNvbG9yOmJsYWNrOwogIHRyYW5zaXRpb246IDAuM3M7CiAgd2lkdGg6MTAwJTsKICBoZWlnaHQ6MDsKICBwYWRkaW5nLXRvcDogMTUwJTsKfQojbWV0YUhlYWRlcnsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluOwogIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7CiAgY29sb3I6YmxhY2s7Cn0KCi8qIlRvb2x0aXAiICovCi50b29sdGlwewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgYm90dG9tOiAwOwogIGxlZnQ6IDA7CiAgcmlnaHQ6IDA7CiAgY29sb3I6IHdoaXRlOwogIG9wYWNpdHk6IDA7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwwKSwgcmdiYSgwLDAsMCwwLjkpLCByZ2JhKDAsMCwwLDEpLCByZ2JhKDAsMCwwLDEpKTsKICB0cmFuc2l0aW9uOiAwLjNzOwp9Ci50b29sQ29udGFpbmVyewogIGhlaWdodDogMTAwJTsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZmxvdzogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKfQouZmlsbUNvbnRhaW5lcnsKICBwb3NpdGlvbjpyZWxhdGl2ZTsKICB0cmFuc2l0aW9uOiAwLjNzOwp9Ci5maWxtQ29udGFpbmVyOmhvdmVyIC50b29sdGlwewogIG9wYWNpdHk6IDE7Cn0KLnRvb2x0aXBUZXh0ewogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGZvbnQtc2l6ZTogMS4zZW07CiAgcGFkZGluZzogNXB4OwogIG1hcmdpbjogMHB4Owp9Ci50b29sdGlwVGV4dDpmaXJzdC1jaGlsZHsKICBjb2xvcjogcmdiYSgwLDAsMCwwKQp9Ci50b29sdGlwVGV4dDpudGgtY2hpbGQoMyl7CiAgZm9udC1zaXplOjFlbTsKfQoudG9vbHRpcE92ZXJ2aWV3ewogIG1heC1oZWlnaHQ6IDIwJTsKICBtYXgtd2lkdGg6IDEwMCU7CiAgZm9udC1zaXplOiAxZW07Cn0KLm5vc2VsZWN0ewogIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7CiAgdXNlci1zZWxlY3Q6IG5vbmU7Cn0KYnV0dG9uewogIHBhZGRpbmc6IDFlbTsKICBib3JkZXItcmFkaXVzOiA4cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzQwNDA0MDsKICBmb250LXNpemU6IDFlbTsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHdoaXRlOwogIGRpc3BsYXk6aW5saW5lLWJsb2NrOwp9Ci5idG5jb25mewogIHBhZGRpbmc6IDFyZW0gMS41cmVtOwogIHRyYW5zaXRpb246IDAuM3M7CiAgYm9yZGVyLXJhZGl1czogM3B4OwogIGJhY2tncm91bmQtY29sb3I6ICM0MDQwNDA7CiAgZm9udC1zaXplOiAxLjRlbTsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHdoaXRlOwogIG1hcmdpbjoxZW07Cn0KLmJ0bmNvbmY6aG92ZXJ7CiAgYmFja2dyb3VuZC1jb2xvcjpkYXJrZ3JheTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0gCgovKk1pc2MgKi8KLmJpZ2dlckFyZWF7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmRyYWdnaW5newogIHZpc2liaWxpdHk6IGhpZGRlbjsKfQouc3ViQ29udGFpbmVyewogIG1heC13aWR0aDogMTIwMHB4Owp9Ci8qbmF2aWdhdGlvbiBlbGVtZW50cyAqLwouaGFuZGxleyAgCiAgbWFyZ2luOiA1cHg7CiAgd2lkdGg6IDIuM2VtOwogIGNvbG9yOiB3aGl0ZTsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdHJhbnNpdGlvbjogMC4zczsKfQouaGFuZGxlOmhvdmVyewogIHRyYW5zZm9ybTogc2NhbGUoMS4xKTsKICBjb2xvcjogZ3JleTsKfQouc29ydGFibGUtZ2hvc3QgLmhhbmRsZXsKICBjb2xvcjogcmVkOwogIG9wYWNpdHk6IDAuNTsKfQoudGVzdHsKICBoZWlnaHQ6YXV0bzsKICBtYXgtaGVpZ2h0OiAzNTBweDsKICB3aWR0aDoxMDAlOwp9Ci5zb3J0TmF2aWdhdGlvbnsKICBoZWlnaHQ6IDEwMCU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmxpc3Q6Zmlyc3QtY2hpbGQgLmxpc3RDb250YWluZXIgLnNvcnROYXZpZ2F0aW9uIC5hcnJvd1VwewogIGRpc3BsYXk6IG5vbmU7Cn0KLmxpc3Q6bGFzdC1jaGlsZCAubGlzdENvbnRhaW5lciAuc29ydE5hdmlnYXRpb24gLmFycm93RG93bnsKICBkaXNwbGF5OiBub25lOwp9Ci5uYXZCdG57CiAgcG9zaXRpb246cmVsYXRpdmU7CiAgd2lkdGg6IDEuNWVtOwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiAzMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgdHJhbnNpdGlvbjogMC4zczsKfQouYXJyb3dTdmd7CiAgY29sb3I6d2hpdGU7CiAgc2l6ZTogMmVtOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICBsZWZ0OiA1MCU7CiAgaGVpZ2h0OiA1MCU7CiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7CiAgd2lkdGg6IDJlbTsKICBoZWlnaHQ6IDJlbTsKICBkaXNwbGF5OiBibG9jazsKICBjb2xvcjp3aGl0ZTsKICB0cmFuc2l0aW9uOiAwLjNzOwp9Ci5hcnJvd1VwOmhvdmVyewogIGNvbG9yOnJlZDsKICB0b3A6IDM1JTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLmFycm93RG93bjpob3ZlcnsKICBjb2xvcjpyZWQ7CiAgdG9wOiA2NSU7CiAgY3Vyc29yOiBwb2ludGVyOwp9Cgo="},{"version":3,"sources":["Browse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAodfile":"Browse.vue","sourceRoot":"src/views","sourcesContent":["<!--This is condition 1A. This condition has no controll elements, and list order is randomized in every itteration. -->\r\n<template>\r\n  <div id=\"container\">\r\n    <div class=\"Browse\">\r\n\r\n      <!--Loading Spinner -->\r\n      <transition name=\"fade\">\r\n        <div id=\"loading\" v-if=\"searching\" mode=\"out-in\">\r\n          <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n      </transition>\r\n\r\n      <!--Instructions for condition 1-3 -->\r\n      <div class=\"textBox\" v-if=\"[1,2,3].includes(this.$parent.condition)\"><!--Condition 1-3 -->\r\n        <div class=\"headerText\">\r\n          <h1>Ordering Recommendations Provided</h1>\r\n          <h1> Step {{this.$parent.itteration}} of 5 </h1>\r\n        </div>\r\n        <p>Based on the movie that you have selected as a reference movie in the previous step, which is also shown directly below, \r\n          you are now tasked with finding a similar movie that you might enjoy to watch. Please inspect the options presented below for this purpose and select a movie that you would like to watch. Your selection will influence future recommendations<p/>\r\n      </div>\r\n\r\n      <!--Instructions for condition 4-6 -->\r\n      <div class=\"textBox\" v-if=\"[4,5,6].includes(this.$parent.condition)\"><!--Condition 4-6 -->\r\n        <div class=\"headerText\">\r\n          <h1>Ordering Recommendations Provided</h1>\r\n          <h1> Step {{this.$parent.itteration}} of 5 </h1>\r\n        </div>\r\n        <p>Based on the movie that you have selected as a reference movie in the previous step, which is also shown directly below, \r\n          you are now tasked with ordering sets of different recommendations to your preference from top to bottom. This can be done by dragging the handle icon \"\r\n          <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrows-alt-v\" id=\"example\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\"><path fill=\"currentColor\" d=\"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"></path></svg>\r\n          \" up and down, or by clicking the arrows to move one position at the time. When satisfied with the order, please select a movie that you would like to watch to continue. Your selection and ordering will influence future recommendation<p/>\r\n      </div>\r\n\r\n      <!-- Renders reference movie information -->\r\n      <div id=\"metaContainer\" v-if=\"!searching\">\r\n        <div id=\"textContainer\">\r\n          <h2>Your Reference Movie:</h2>\r\n          <h3>{{movies[0][\"Metadata\"].Title}}</h3>\r\n          <p style=\"font-weight: bold;\">{{movies[0][\"Metadata\"].Release}}</p>\r\n          <p class = \"metaText\">{{movies[0][\"Metadata\"].Overview}}</p>\r\n          <p class = \"metaText\">Stars: {{movies[0][\"Metadata\"].Actors}}</p>\r\n          <p class = \"metaText\">Director: {{movies[0][\"Metadata\"].Directors}}</p>\r\n          <p class = \"metaText\">Genres: {{movies[0][\"Metadata\"].Genres}}</p>\r\n        </div>\r\n        <div id=\"imageContainer\">\r\n          <div style=\"width:45%; height:100%;\"></div>\r\n          <div id=\"metaHeader\" :style=\"getImgStyle(movies[0]['Metadata'].Cover_Path)\"></div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!--Zoom Button -->\r\n      <button v-on:click=\"zoom\" class=\"zoomButton\">\r\n        <transition name=\"fade\" mode=\"out-in\">\r\n          <div v-bind:key=\"zoomState\">\r\n            {{zoomState ? 'Normalize' : 'Zoom Out'}}\r\n          </div>\r\n        </transition>\r\n      </button>\r\n\r\n      <!--Renders without controll elements, IE conditions 1-3. Recommendations sorted into list without control elements  -->\r\n      <div class=\"recContainer\" v-if=\"[1,2,3].includes(this.$parent.condition)\" v-bind:style=\"zoomState ? 'transform: scale(0.5); display: block; transition: all 1s;' : 'transform: scale(1.0); transition: all 1s;'\">\r\n        <div class =\"list\" v-for=\"(list,name) in similarities\" v-bind:item=\"list\" v-bind:key=\"name\">\r\n          <div style=\"display: flex; flex-direction:column;\">\r\n            <p class=\"titleHeader\">{{list[0]}}</p>\r\n\r\n            <div class=\"listContainer\">\r\n              <div class =\"filmSet\" v-for=\"(filmSet,index) in cut(list[1])\" v-bind:item=\"filmSet\" v-bind:key=\"index\">\r\n                <div class=\"filmContainer\">\r\n                  <img class=\"test\" :src=\"getPicUrl(filmSet.Cover_Path)\">\r\n\r\n                  <div class=\"tooltip\">\r\n                    <div class=\"toolContainer\">\r\n                      <p class=\"tooltipText noselect\">placeholder</P>\r\n                      <p class=\"tooltipText\">{{filmSet.Title}}</p>\r\n                      <p class=\"tooltipText\">( {{filmSet.Release.substring(0,4)}} )</p>\r\n                      <p id=\"tooltipOverview\">{{filmSet.Overview.substring(0,90)}}...</p>\r\n                      <button class=\"btnconf\" v-on:click=\"endSession(filmSet.MovieLensID, list[0])\">Confirm</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Renders with control elements IF conditions are 4-6 -->\r\n      <div class=\"recContainer\" v-if=\"[4,5,6].includes(this.$parent.condition)\" v-bind:style=\"zoomState ? 'transform: scale(0.5); display: block; transition: all 1s;' : 'transform: scale(1.0); transition: all 1s;'\">\r\n\r\n        <draggable v-bind=\"dragOptions\" v-model=\"similarities\" swapThreshold=\"1\" dragClass=\"dragging\" direction=\"horizontal\" invertSwap=false class=\"biggerArea\" animation=\"200\" handle=.handle @change=\"checkMove($event)\">\r\n          <div class =\"list\" v-for=\"(list,index,name) in similarities\" v-bind:item=\"list\" :key=\"name\">\r\n            <!--Temporary duplicate based on placement -->\r\n            <div class=\"listContainer\">\r\n              <div class=\"sortNavigation\">\r\n                <button class=\"navBtn arrowUp\" v-on:click=\"navUp(index)\">\r\n                  <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-up\" class=\"arrowSvg arrowUp\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z\"></path></svg>   \r\n                </button>\r\n                <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"arrows-alt-v\" class=\"handle\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 256 512\"><path fill=\"currentColor\" d=\"M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z\"></path></svg>\r\n                <button class=\"navBtn arrowDown\" v-on:click=\"navDown(index)\">\r\n                  <svg aria-hidden=\"true\" focusable=\"false\" data-prefix=\"fas\" data-icon=\"chevron-down\" class=\"arrowSvg arrowDown\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path fill=\"currentColor\" d=\"M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z\"></path></svg>\r\n                </button>\r\n              </div>\r\n              <!--Movie loop -->\r\n              <div style=\"display: flex; flex-direction:column;\">\r\n                <p class=\"titleHeader\">{{list[0]}}</p>\r\n                <div style=\"display: flex; flex-direction:row;\">\r\n                  <div class =\"filmSet\" v-for=\"(filmSet,Id) in cut(list[1])\" v-bind:item=\"filmSet\" v-bind:key=\"Id\">\r\n                    <div class=\"filmContainer\">\r\n                      <img class=\"test\" :src=\"getPicUrl(filmSet.Cover_Path)\">\r\n\r\n                      <div class=\"tooltip\">\r\n                        <div class=\"toolContainer\">\r\n                          <p class=\"tooltipText noselect\">placeholder</P>\r\n                          <p class=\"tooltipText\">{{filmSet.Title}}</p>\r\n                          <p class=\"tooltipText\">( {{filmSet.Release.substring(0,4)}} )</p>\r\n                          <p id=\"tooltipOverview\">{{filmSet.Overview.substring(0,90)}}...</p>\r\n                          <button class=\"btnconf\" v-on:click=\"endSession(filmSet.MovieLensID, list[0])\">Confirm</button>\r\n                        </div>\r\n                      </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </draggable>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostService from '../SearchService'\r\nimport draggable from 'vuedraggable'\r\n\r\nexport default {\r\n    components: {\r\n    draggable\r\n  },\r\n  /*Local Variables */\r\n  data() {\r\n    return {\r\n      id:this.$route.params.id,\r\n      movies: [],\r\n      similarities: [],\r\n      errors: '',\r\n      text: '',\r\n      listOrder: [],\r\n      moveDistanceD: 0,\r\n      moveDistanceC: 0,\r\n      moveDistanceA: 0,\r\n      dragCount: 0,\r\n      clickCount: 0,\r\n      totalCount: 0,\r\n      browseStart : undefined,\r\n      searching : true,\r\n      zoomState : false,\r\n      zoomCounter: 0,\r\n\r\n      greekState: false,\r\n      titleState: false,\r\n      indexState: false,\r\n      placement: false,\r\n    }\r\n  },\r\n  computed: {\r\n    //config for scrolling variables while dragging\r\n    dragOptions(){\r\n      return {\r\n     scrollSensitivity: \"200\",\r\n     forceFallback: true,\r\n     scrollSpeed: \"30\",\r\n      }\r\n    }\r\n  },\r\n  /* Starts when view is initialized. Retrieves recommender lists based on movie selected. Shuffles afterwards */\r\n  async created() {\r\n    try{\r\n      this.movies = await PostService.getSims(this.id)\r\n\r\n      if(this.$parent.debugState){\r\n        console.log(\"Data collected from the database:\")\r\n        console.log(this.movies)\r\n      }\r\n      const temp= this.movies[0][\"Similarities\"]\r\n      this.browseStart = Date.now()\r\n      this.trimOutput()\r\n      this.similarities = Object.keys(temp).map((key) => {\r\n        return [String(key), temp[key]];\r\n      })\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n\r\n    /*Sort list if randomised conditions OR first itteration. condition 1 and 4*/\r\n    if([1,4].includes(this.$parent.condition) || this.$parent.itteration == 1){\r\n      this.similarities = this.shuffle(this.similarities)\r\n    }\r\n\r\n    //Sets list order to the order at the end of the previous itteration. Condition 2 and 5\r\n    else if([2,5].includes(this.$parent.condition)){\r\n      this.similarities = this.prevOrder()\r\n    }\r\n\r\n    //sorts list order based on weights from previous itterations. Condition 3 and 6\r\n    else if([3,6].includes(this.$parent.condition)){\r\n      this.applyWeights()\r\n    }\r\n    this.searching = false\r\n  },\r\n\r\n  methods: {\r\n    //Logs number of drags and how far it was dragged\r\n    zoom(){\r\n      this.zoomState = !this.zoomState\r\n      this.zoomCounter++\r\n    },\r\n\r\n    //Logic and logging of navbutton up\r\n    navUp(index){\r\n      var currentPos = this.similarities[index]\r\n      var abovePos = this.similarities[index-1]\r\n      this.similarities[index-1] = currentPos\r\n      this.similarities[index] = abovePos\r\n      this.clickCount = this.clickCount + 1;\r\n      this.totalCount = this.totalCount +1\r\n      this.moveDistanceA = this.moveDistanceA + 1;\r\n      this.moveDistanceC = this.moveDistancec + 1;\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    //Logic and logging of navbutton down\r\n    navDown(index){\r\n      var currentPos = this.similarities[index]\r\n      var belowPos = this.similarities[index+1]\r\n      this.similarities[index+1] = currentPos\r\n      this.similarities[index] = belowPos\r\n      this.clickCount = this.clickCount + 1;\r\n      this.totalCount = this.totalCount +1\r\n      this.moveDistanceA = this.moveDistanceA + 1;\r\n      this.moveDistanceC = this.moveDistancec + 1;\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    // Logs usage of drag & drop\r\n    checkMove(evt){\r\n      this.dragCount = this.dragCount + 1;\r\n      this.totalCount = this.totalCount +1\r\n      this.moveDistanceD = this.moveDistanceD + parseInt((Math.abs(parseInt(evt.moved.oldIndex) - parseInt(evt.moved.newIndex))))\r\n      this.moveDistanceA = this.moveDistanceA + parseInt((Math.abs(parseInt(evt.moved.oldIndex) - parseInt(evt.moved.newIndex))))\r\n    },\r\n\r\n    //formats the metadata into something more viewable\r\n    trimOutput(){\r\n      var source = this.movies[0][\"Metadata\"]\r\n      this.movies[0][\"Metadata\"].Release = \"(\" + source.Release.substring(0,4) + \")\"\r\n      var actorlist = source.Actors.split(',')\r\n      var actorString = \"\"\r\n\r\n      if(actorlist.length < 4){\r\n        for(var i in actorlist){\r\n          if(i == 0){\r\n            actorString = actorlist[i]\r\n          }\r\n          else{\r\n            actorString = actorString.concat( \", \" + actorlist[i])\r\n          }\r\n        }\r\n      }\r\n\r\n      else{\r\n        for(var x = 0; x < 4; x ++){\r\n          if(x == 0){\r\n            actorString = actorlist[x]\r\n          }\r\n          else{\r\n            actorString = actorString.concat(\", \" + actorlist[x])\r\n          }\r\n        }\r\n      }\r\n      this.movies[0][\"Metadata\"].Actors = actorString\r\n    },\r\n\r\n    /* Sets order to previous itterations order, used by condition 2 and 5*/\r\n     prevOrder(){\r\n      const previousOrder = this.$parent.globalList[this.$parent.itteration-2]\r\n      const tempOrder = []\r\n\r\n      //special handling needed for condition 2\r\n      if(this.$parent.condition == 2){\r\n        for(var p = 0; p < this.similarities.length; p++){\r\n          if(this.$parent.previousSelectedList == this.similarities[p][0]){\r\n            tempOrder.push(this.similarities[p])\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      for(var x= 0; x < previousOrder.length; x++){\r\n        for(var y= 0; y < this.similarities.length; y++){\r\n          if(previousOrder[x] == this.similarities[y][0]){\r\n            if(this.similarities[y][0] !== this.$parent.previousSelectedList){\r\n              tempOrder.push(this.similarities[y])\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return tempOrder\r\n    },\r\n\r\n    /* Fisher-Yates shuffle of the lists for randomization */\r\n    shuffle(arr) {\r\n      var i, j, temp;\r\n      for (i = arr.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        temp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = temp;\r\n      }\r\n      return arr;    \r\n    },\r\n\r\n    //\"Hey i'm going to include 10 movies in the dataset what a good idea it is probably super easy to limit output later\".fix\r\n    cut(object) {\r\n      const treated =  Object.keys(object).map((key) => {\r\n        return [String(key), object[key]];\r\n      })\r\n      var halfSplit = {}\r\n      for (var i = 0; i < 5; i++){\r\n        halfSplit[i] = treated[i][1]\r\n      }\r\n      return halfSplit\r\n    },\r\n\r\n    //These two exist because vue is a real bitch with dynamic paths in the build\r\n    getImgStyle(url){\r\n      const imagePath = this.getPicUrl(url)\r\n      const anotherOne = `url(\" `+ imagePath + `\")`\r\n      return {'background-image': anotherOne}\r\n    },\r\n    getPicUrl(url){\r\n      return require('../assets/posters' + url)\r\n    },\r\n\r\n    /*Update database with values. postService params:  Id - Field - Value */\r\n    async updateStuff(field,value){\r\n      await PostService.genericUpdate(this.$parent.sessionId,field,value)\r\n    },\r\n\r\n    /*Generate a list containing current order of the recs. Index = position, name = name */\r\n    getListOrder(){\r\n      for(var i = 0; i < this.similarities.length; i++){\r\n        this.listOrder.push(this.similarities[i][0])      \r\n      }\r\n    },\r\n\r\n    /* finds position of the list which the movie was selected from */\r\n    getPosition(target){\r\n      for (var j = 0; j < this.listOrder.length; j++){\r\n        if(this.listOrder[j] == target){\r\n          return j\r\n        }\r\n      }\r\n    },\r\n\r\n    //Apply weights based on order\r\n    createWeights(){\r\n      var listObject = []\r\n      for(var x in this.listOrder ){\r\n        listObject[x] = {list : this.listOrder[x], value : (this.listOrder.length-x)/10 }\r\n      }\r\n      this.$parent.weightList = listObject\r\n\r\n      if(this.$parent.debugState){\r\n        console.log(\"created weights\")\r\n        console.log(this.$parent.weightList)\r\n      }\r\n    },\r\n\r\n    //Applies weights based on previous itterations \r\n    updateWeights(){\r\n      for(var x in this.listOrder){\r\n        for(var y in this.$parent.weightList){\r\n          if(this.$parent.weightList[y].list == this.listOrder[x]){\r\n            this.$parent.weightList[y].value = parseFloat((this.$parent.weightList[y].value + ((this.listOrder.length - x) / 10)).toFixed(2))\r\n            break\r\n          }\r\n        }\r\n      }\r\n      this.$parent.weightList = this.$parent.weightList.sort((a,b) => (a.value < b.value) ? 1: -1)\r\n    },\r\n\r\n    //Uses the weights to sort the list\r\n    applyWeights(){\r\n      var sortedSim = []\r\n      for(var x in this.$parent.weightList){\r\n        for(var y in this.similarities){\r\n          if(this.$parent.weightList[x].list == this.similarities[y][0]){\r\n            sortedSim.push(this.similarities[y])\r\n            break\r\n          }\r\n        }\r\n      }\r\n      this.similarities = sortedSim\r\n    },\r\n\r\n    //get current time\r\n    getTime(){\r\n      return Math.abs((Date.now() - this.browseStart)/1000).toFixed(2)\r\n    },\r\n\r\n    /*Browsing end handler. Writes activity to database, then determines what path to chose based on itteration state. */\r\n    endSession(MovieId,selectedList){\r\n      this.getListOrder()\r\n      this.$parent.previousSelectedList = selectedList\r\n      if([3,6].includes(this.$parent.condition)){\r\n        if(this.$parent.itteration == 1){\r\n          this.createWeights()\r\n        }\r\n        else{\r\n          this.updateWeights()\r\n        }\r\n      }\r\n\r\n      //Result field\r\n      const result = {\r\n        listOrdering : this.listOrder,\r\n        listSelectedFrom : selectedList,\r\n        movieSelected : MovieId + \".json\",\r\n        moviePosition : this.getPosition(selectedList),\r\n        clickCount : this.clickCount,\r\n        dragCount : this.dragCount,\r\n        totalCount : this.totalCount,\r\n        moveDistanceA : this.moveDistanceA,\r\n        moveDistanceC : this.moveDistanceC,\r\n        moveDistanceD : this.moveDistanceD,\r\n        browsingTime : parseFloat(this.getTime()),\r\n        zoomPressed : this.zoomCounter\r\n      }\r\n\r\n      if(this.$parent.debugState){\r\n        console.log(\"logged data from this session:\")\r\n        console.log(result)\r\n      }\r\n      const fieldName = \"BrowseResult\" + this.$parent.itteration\r\n      this.updateStuff(fieldName,result)\r\n\r\n      //continuation handler\r\n      if(this.$parent.itteration == 5){\r\n        this.$router.push({path:'/Survey'  })\r\n      }\r\n      else {\r\n        this.$parent.globalList[this.$parent.itteration-1] = this.listOrder\r\n        this.$parent.itteration = this.$parent.itteration + 1\r\n        this.$router.push({path:'/search'  })\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n  /*General */\r\n  .container{\r\n    width:100%;\r\n    transition: .2s;\r\n  }\r\n  .Browse{\r\n    width:100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  /*Zoom button */\r\n  .zoomButton{\r\n    font-weight:bold;\r\n    width: 10em; \r\n    color: black; \r\n    background-color: white;\r\n    transition: 0.3s;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .zoomButton:hover{\r\n    background-color: red;\r\n  }\r\n\r\n  /*Legend*/\r\n  .textBox {\r\n    background-color: black;\r\n    border-style: solid;\r\n    border-width: 2px;\r\n    border-color: white;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    max-width: 1200px;\r\n  }\r\n  p,h1 {\r\n    color:white;\r\n    font-size: 1em;\r\n    text-align:left;\r\n    white-space: pre-line;\r\n    margin: 5px;\r\n  }\r\n  #example{\r\n    height: 1.2em;\r\n  }\r\n  .headerText{\r\n    display: flex;\r\n    flex-wrap: nowrap;\r\n    justify-content: space-between;\r\n  }\r\n  h1{\r\n    font-size:2em;\r\n    color:red;\r\n  }\r\n  i{\r\n    color:white;\r\n  }\r\n\r\n  /*Reference Movie*/\r\n  .metaText{\r\n    font-size: 1em;\r\n    padding: 0px;\r\n  }\r\n  #metaContainer{\r\n    background-color: black;\r\n    border-style: solid;\r\n    border-width: 2px;\r\n    border-color: white;\r\n    padding: 10px;\r\n    display: flex;\r\n    width: 95%;\r\n    max-width: 1200px;\r\n    margin:10px;\r\n  }\r\n  #textContainer{\r\n    width: 50%;\r\n    min-width: 50%;\r\n    max-width: 50%;\r\n  }\r\n  #imageContainer{\r\n    width:100%;\r\n    min-width: 55%;\r\n    min-height: 100%;\r\n    display: flex;\r\n\r\n  }\r\n  h2{\r\n    color: red;\r\n  }\r\n  h3{\r\n    color: white;\r\n    font-size: 3em\r\n  }\r\n  .titleHeader{\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n  }\r\n\r\n  /*List Style */\r\n  .recContainer{\r\n    margin-top:10px;\r\n    width: 100%;\r\n    transform-origin: top;\r\n  }\r\n  .list{\r\n    width:100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  .listContainer{\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction: row;\r\n    flex-grow:1;\r\n    justify-content: space-evenly;\r\n    margin-bottom: 10px;\r\n    align-items: center;\r\n    max-width: 1224px;\r\n  }\r\n  .listInfoC{\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: left;\r\n  }\r\n  .listInfoC * {\r\n    white-space: nowrap;\r\n    font-weight: bold;\r\n    width:60px;\r\n    text-align: center;\r\n  }\r\n  .listInfoR{\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.5em;\r\n  }\r\n  /*Film style */\r\n  .filmSet{\r\n    height: 100%;\r\n    width:100%;\r\n    max-width: 20%;\r\n    min-width: 15%;\r\n    margin-left: 5px;\r\n  }\r\n  .film{\r\n    min-height:100%;\r\n    min-width:100%;\r\n    display: flex;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    color:black;\r\n    transition: 0.3s;\r\n    width:100%;\r\n    height:0;\r\n    padding-top: 150%;\r\n  }\r\n  #metaHeader{\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    color:black;\r\n  }\r\n\r\n  /*\"Tooltip\" */\r\n  .tooltip{\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    color: white;\r\n    opacity: 0;\r\n    background-image: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.9), rgba(0,0,0,1), rgba(0,0,0,1));\r\n    transition: 0.3s;\r\n  }\r\n  .toolContainer{\r\n    height: 100%;\r\n    display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n  .filmContainer{\r\n    position:relative;\r\n    transition: 0.3s;\r\n  }\r\n  .filmContainer:hover .tooltip{\r\n    opacity: 1;\r\n  }\r\n  .tooltipText{\r\n    font-weight: bold;\r\n    font-size: 1.3em;\r\n    padding: 5px;\r\n    margin: 0px;\r\n  }\r\n  .tooltipText:first-child{\r\n    color: rgba(0,0,0,0)\r\n  }\r\n  .tooltipText:nth-child(3){\r\n    font-size:1em;\r\n  }\r\n  .tooltipOverview{\r\n    max-height: 20%;\r\n    max-width: 100%;\r\n    font-size: 1em;\r\n  }\r\n  .noselect{\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n  button{\r\n    padding: 1em;\r\n    border-radius: 8px;\r\n    background-color: #404040;\r\n    font-size: 1em;\r\n    border: none;\r\n    color: white;\r\n    display:inline-block;\r\n  }\r\n  .btnconf{\r\n    padding: 1rem 1.5rem;\r\n    transition: 0.3s;\r\n    border-radius: 3px;\r\n    background-color: #404040;\r\n    font-size: 1.4em;\r\n    border: none;\r\n    color: white;\r\n    margin:1em;\r\n  }\r\n  .btnconf:hover{\r\n    background-color:darkgray;\r\n    cursor: pointer;\r\n  } \r\n\r\n  /*Misc */\r\n  .biggerArea{\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .dragging{\r\n    visibility: hidden;\r\n  }\r\n  .subContainer{\r\n    max-width: 1200px;\r\n  }\r\n  /*navigation elements */\r\n  .handle{  \r\n    margin: 5px;\r\n    width: 2.3em;\r\n    color: white;\r\n    cursor: pointer;\r\n    transition: 0.3s;\r\n  }\r\n  .handle:hover{\r\n    transform: scale(1.1);\r\n    color: grey;\r\n  }\r\n  .sortable-ghost .handle{\r\n    color: red;\r\n    opacity: 0.5;\r\n  }\r\n  .test{\r\n    height:auto;\r\n    max-height: 350px;\r\n    width:100%;\r\n  }\r\n  .sortNavigation{\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .list:first-child .listContainer .sortNavigation .arrowUp{\r\n    display: none;\r\n  }\r\n  .list:last-child .listContainer .sortNavigation .arrowDown{\r\n    display: none;\r\n  }\r\n  .navBtn{\r\n    position:relative;\r\n    width: 1.5em;\r\n    background: transparent;\r\n    text-align: center;\r\n    border-radius: 30px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    transition: 0.3s;\r\n  }\r\n  .arrowSvg{\r\n    color:white;\r\n    size: 2em;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 2em;\r\n    height: 2em;\r\n    display: block;\r\n    color:white;\r\n    transition: 0.3s;\r\n  }\r\n  .arrowUp:hover{\r\n    color:red;\r\n    top: 35%;\r\n    cursor: pointer;\r\n  }\r\n  .arrowDown:hover{\r\n    color:red;\r\n    top: 65%;\r\n    cursor: pointer;\r\n  }\r\n\r\n</style>"]}]}