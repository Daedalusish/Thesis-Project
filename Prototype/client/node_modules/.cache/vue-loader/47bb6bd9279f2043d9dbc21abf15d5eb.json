{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue","mtime":1590233754171},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0U2VydmljZSBmcm9tICcuLi9TZWFyY2hTZXJ2aWNlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlYXJjaCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIC8vTG9jYWwgVmFyaWFibGVzCiAgICAgIG1vdmllczogW10sCiAgICAgIGVycm9yczogJycsCiAgICAgIHRleHQ6ICcnLAogICAgICByZXN1bHRTdGF0ZSA6IHVuZGVmaW5lZAogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIC8qIERldGVybWluZXMgaWYgdG8gc2hvdyByZXN1bHRzIG9yIGFzayB1c2VyIHRvIHRyeSBhbm90aGVyIHF1ZXJ5ICovCiAgICByZXN1bHRzRm91bmQoKXsKICAgICAgaWYodGhpcy5tb3ZpZXMubGVuZ3RoID09IDApewogICAgICAgIHRoaXMucmVzdWx0U3RhdGUgPSBmYWxzZQogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgdGhpcy50cmltT3V0cHV0KCkKICAgICAgICB0aGlzLnJlc3VsdFN0YXRlID0gdHJ1ZQogICAgICB9CiAgICB9LCAgICAKICAgIHRyaW1PdXRwdXQoKXsKICAgICAgZm9yKHZhciBpIGluIHRoaXMubW92aWVzKXsKICAgICAgICB0aGlzLm1vdmllc1tpXS5SZWxlYXNlID0gIigiICsgdGhpcy5tb3ZpZXNbaV0uUmVsZWFzZS5zdWJzdHJpbmcoMCw0KSArICIpIgogICAgICAgIHRoaXMubW92aWVzW2ldLk92ZXJ2aWV3ID0gdGhpcy5tb3ZpZXNbaV0uT3ZlcnZpZXcuc3Vic3RyaW5nKDAsMTAwKSArICIuLi4iICAKICAgICAgfQogICAgfSwKCiAgCiAgICAvL1NldHMgaW1hZ2Ugc3R5bGUKICAgIGdldEltZ1N0eWxlKHVybCl7CiAgICAgIGNvbnN0IGltYWdlUGF0aCA9IHRoaXMuZ2V0UGljVXJsKHVybCkKICAgICAgY29uc3QgYW5vdGhlck9uZSA9IGB1cmwoIiBgKyBpbWFnZVBhdGggKyBgIilgCiAgICAgIHJldHVybiB7J2JhY2tncm91bmQtaW1hZ2UnOiBhbm90aGVyT25lfQogICAgfSwKCiAgICAvL05lZWRlZCBpbiBvcmRlciB0byBmb3JjZSB2dWUgdG8gcmVjb2duaXplIGR5bmFtaWMgbGlua3MgZXhpc3RhbmNlIGF0IGJ1aWxkLgogICAgZ2V0UGljVXJsKHVybCl7CiAgICAgICAgcmV0dXJuIHJlcXVpcmUoJy4uL2Fzc2V0cy9wb3N0ZXJzJyArIHVybCkKICAgIH0sCgogICAgLypDYWxsIHRvIEFQSSB3aXRoIHF1ZXJ5ICovCiAgICBhc3luYyBzZWFyY2hNb3ZpZXMoKSB7CiAgICAgIGlmKHRoaXMudGV4dCAhPT0gJycpewogICAgICAgIHRyeXsKICAgICAgICAgIHRoaXMubW92aWVzID0gYXdhaXQgUG9zdFNlcnZpY2Uuc2VhcmNoTW92aWUodGhpcy50ZXh0KQogICAgICAgICAgdGhpcy5yZXN1bHRzRm91bmQoKQogICAgICAgICAgY29uc29sZS5sb2codGhpcy5tb3ZpZXMpCiAgICAgICAgfSBjYXRjaChlcnIpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGVycikKICAgICAgICB9CiAgICAgIH0KICAgIH0sCgogICAgLypVcGRhdGUgZGF0YWJhc2Ugd2l0aCB2YWx1ZXMuIHBvc3RTZXJ2aWNlIHBhcmFtczogIElkIC0gRmllbGQgLSBWYWx1ZSAqLwogICAgYXN5bmMgdXBkYXRlU3R1ZmYoZmllbGQsdmFsdWUpewogICAgICBhd2FpdCBQb3N0U2VydmljZS5nZW5lcmljVXBkYXRlKHRoaXMuJHBhcmVudC5zZXNzaW9uSWQsZmllbGQsdmFsdWUpCiAgICB9LAoKICAgIC8qQ3JlYXRlcyBwYXRoIGZvciBuZXh0IHZpZXcgYmFzZWQgb24gcXVlcnkgYW5kIGNvbmRpdGlvbiAqLwogICAgY29uY2F0UGF0aChpZCl7CiAgICAgIGNvbnN0IG9sZFBhdGggPSAnL0Jyb3dzZS8nICsgaWQKICAgICAgcmV0dXJuIG9sZFBhdGgKICAgIH0sCgogICAgLyogSGFuZGxlcyBlbmQgb2YgdmlldyBiYXNlZCBvbiBidXR0b24gcHJlc3MuIExvZ3Mgc2Vzc2lvbiBpbmZvcm1hdGlvbiB0byBkYXRhYmFzZSBhbmQgcmVyb3V0ZXMgdG8gYXBwcm9wcmlhdGUgY29uZGl0aW9uIGJhc2VkIG9uIGdsb2JhbCB2YXJpYWJsZSAqLwogICAgbmV4dFNjcmVlbihpZCl7CiAgICAgIHRoaXMudXBkYXRlU3R1ZmYoKCJTZWFyY2giICsgdGhpcy4kcGFyZW50Lml0dGVyYXRpb24pLGlkKQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7cGF0aDogdGhpcy5jb25jYXRQYXRoKGlkLCkgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views","sourcesContent":["<!--This component handles all searches for movies -->\n<template>\n  <div class=\"Search\">\n\n    <!--Legend container-->\n    <div id=\"container\">\n      <div class=\"textBox\">\n        <h1>Reference Item Selection</h1>                        \n        <h2>Step {{this.$parent.itteration}} of 5</h2>\n        <p>Please search for and select a movie that you have watched and enjoyed at some point. In the following step, we show you other movies that might be interesting for you.<p/>\n        <p>Note that our survey system only contains a limited number of movies; especially newer movies might be missing. If the movie you would like to select is not available, please try another one.</p>\n      </div>\n    </div>\n\n    <!--Search input container -->\n    <div class=\"SearchBox\">\n      <div class=\"searchField\">\n        <i class=\"fas fa-search\"></i>\n        <input type=\"text\" id=\"inputField\" v-model=\"text\" placeholder=\"Type a familiar movie here..\">\n      </div>\n      <button v-on:click=\"searchMovies\"><i class=\"fas fa-search\"></i>Search</button>\n    </div>\n    \n    <!--search result container -->\n    <div class=Movie-container>\n      <div class=\"NoResult\" v-if=\"resultState == false\">\n        <h1>No Results found. Try again </h1>\n      </div>\n      <div class=\"movieContainer\">\n        <div class=\"movie\" \n          v-for=\"(movie, index) in movies\" \n          v-bind:item=\"movie\" \n          v-bind:index=\"index\" \n          v-bind:key=\"movie._id\"\n          v-bind:id=\"movies.Id\" >\n          <div class=\"poster\" :style=\"getImgStyle(movie.Cover_Path)\">\n            <div class=\"tooltip\">\n              <p class=\"tooltipText\">{{movie.Title}}</p>\n              <p class=\"tooltipText\">{{movie.Release}}</p>\n              <p id=\"tooltipOverview\">{{movie.Overview}}</p>\n              <button class=\"btnconf\" v-on:click=\"nextScreen(movie.Id)\"><i class=\"fas fa-check\"></i>Continue with <br> this movie</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport PostService from '../SearchService'\nexport default {\n  name: 'Search',\n  data() {\n    return {\n      //Local Variables\n      movies: [],\n      errors: '',\n      text: '',\n      resultState : undefined\n    }\n  },\n\n  methods: {\n    /* Determines if to show results or ask user to try another query */\n    resultsFound(){\n      if(this.movies.length == 0){\n        this.resultState = false\n      }\n      else{\n        this.trimOutput()\n        this.resultState = true\n      }\n    },    \n    trimOutput(){\n      for(var i in this.movies){\n        this.movies[i].Release = \"(\" + this.movies[i].Release.substring(0,4) + \")\"\n        this.movies[i].Overview = this.movies[i].Overview.substring(0,100) + \"...\"  \n      }\n    },\n\n  \n    //Sets image style\n    getImgStyle(url){\n      const imagePath = this.getPicUrl(url)\n      const anotherOne = `url(\" `+ imagePath + `\")`\n      return {'background-image': anotherOne}\n    },\n\n    //Needed in order to force vue to recognize dynamic links existance at build.\n    getPicUrl(url){\n        return require('../assets/posters' + url)\n    },\n\n    /*Call to API with query */\n    async searchMovies() {\n      if(this.text !== ''){\n        try{\n          this.movies = await PostService.searchMovie(this.text)\n          this.resultsFound()\n          console.log(this.movies)\n        } catch(err) {\n          console.log(err)\n        }\n      }\n    },\n\n    /*Update database with values. postService params:  Id - Field - Value */\n    async updateStuff(field,value){\n      await PostService.genericUpdate(this.$parent.sessionId,field,value)\n    },\n\n    /*Creates path for next view based on query and condition */\n    concatPath(id){\n      const oldPath = '/Browse/' + id\n      return oldPath\n    },\n\n    /* Handles end of view based on button press. Logs session information to database and reroutes to appropriate condition based on global variable */\n    nextScreen(id){\n      this.updateStuff((\"Search\" + this.$parent.itteration),id)\n      this.$router.push({path: this.concatPath(id,)  })\n    }\n  }\n}\n</script>\n\n<style scoped>\n  /*Legend Style*/\n  #container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .textBox {\n    background-color: black;\n    opacity: 0.9;\n    border-style: solid;\n    border-width: 2px;\n    border-color: white;\n    padding: 10px;\n    max-width: 1200px;\n    display: block;\n  }\n  p,h1 {\n    color:white;\n    padding: 5px;\n    text-align:left;\n    white-space: pre-line;\n    text-align: center;\n    \n  }\n  h1{\n    font-size:2em;\n    color:red;\n  }\n  h2{\n    font-size: 1.5em;\n    color: white\n\n  /*Search bar */\n  }\n  .searchField{\n    background-color: lightgray;\n    display: inline-block;\n    border-radius: 6px;\n  }\n  #inputField{\n    border:none;\n    background-color: lightgray;\n    height: 1.2em;\n    font-size: 1.2em;\n  }\n\n/*Movie styling */\n  .movieContainer{\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n  .movie{\n    height: 100%;\n    width: auto;\n    box-sizing: border-box;\n  }\n  .poster{\n    height: 450px;\n    width: 300px;\n    display: inline-block;\n    background-size: cover;\n  }\n  .tooltip{\n    height:100%;\n    width: 100%;\n    color: white;\n    display: none;\n    background-image: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.9), rgba(0,0,0,1), rgba(0,0,0,1))\n  }\n  .poster:hover .tooltip{\n    height:100%;\n    width: 100%;\n    display: inline-block;\n    transition: 2s;\n  }\n  .tooltipText:first-child{\n    margin-top: 60%;\n    padding:none;\n  }\n  .tooltipText{\n    font-weight: bold;\n    font-size: 1,5em;\n    padding:none;\n    padding-bottom: 5px;\n  }\n  #tooltipOverview{\n    max-height: 20%;\n    max-width: 100%;\n    font-size: 1em;\n  }\n  button{\n    padding: 1em;\n    border-radius: 8px;\n    background-color: #404040;\n    font-size: 1em;\n    border: none;\n    color: white;\n  }\n  .btnconf{\n    position: relative;\n    bottom: 0;\n    transition: 0.3s;\n  }\n  .btnconf:hover{\n    background-color:darkgray;\n    cursor: pointer;\n  }\n  i{\n    color:white;\n  }\n</style>"]}]}