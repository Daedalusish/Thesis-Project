{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue","mtime":1602185610391},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0U2VydmljZSBmcm9tICIuLi9TZWFyY2hTZXJ2aWNlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJTZWFyY2giLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL0xvY2FsIFZhcmlhYmxlcwogICAgICBtb3ZpZXM6IFtdLAogICAgICBlcnJvcnM6ICIiLAogICAgICB0ZXh0OiAiIiwKICAgICAgcmVzdWx0U3RhdGU6IHVuZGVmaW5lZCwKICAgICAgcHJldmlvdXNUZXh0OiB1bmRlZmluZWQsCiAgICAgIHNlYXJjaGluZzogZmFsc2UsCiAgICAgIHNlcnZlckVycm9yOiBmYWxzZSwKICAgICAgcHJldkVycm9yOiBmYWxzZSwKICAgICAgY2xpY2thYmxlOiB0cnVlLAogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICAvL0FsbG93cyB1c2VycyB0byB1c2UgdGhlaXIgZW50ZXIgYnV0dG9uIHdpdGggc2FtZSBmdW5jdGlvbmFsaXR5IGFzIHNlYXJjaCBidXR0b24uIENoZWNrIGluIHBsYWNlIHRvIGRpc2FibGUgZG91YmxlLWNsaWNrCiAgICBrZXltb25pdG9yOiBmdW5jdGlvbihldmVudCkgewogICAgICBpZiAoZXZlbnQua2V5ID09ICJFbnRlciIgJiYgdGhpcy50ZXh0ICE9IHRoaXMucHJldmlvdXNUZXh0KSB7CiAgICAgICAgdGhpcy5zZWFyY2hNb3ZpZXMoKTsKICAgICAgfQogICAgfSwKCiAgICAvL0NhbGwgdG8gQVBJIHdpdGggcXVlcnkuIEFsc28gaGFuZGxlcyB0aGUgc3RhdGUgb2YgRE9NIGVsZW1lbnRzIHN1Y2ggYXMgbG9hZGluZyBpY29uLiBDaGVjayBpbiBwbGFjZSB0byBkaXNhYmxlIGRvdWJsZS1jbGljawogICAgYXN5bmMgc2VhcmNoTW92aWVzKCkgewogICAgICBpZih0aGlzLmNsaWNrYWJsZSl7CiAgICAgICAgdGhpcy5jbGlja2FibGUgPSBmYWxzZQogICAgICAgIHRoaXMucHJldkVycm9yID0gZmFsc2U7CiAgICAgICAgaWYgKHRoaXMudGV4dCAhPT0gIiIgJiYgdGhpcy50ZXh0ICE9IHRoaXMucHJldmlvdXNUZXh0KSB7CiAgICAgICAgICB0aGlzLnNlYXJjaGluZyA9IHRydWU7CgogICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgdGhpcy5tb3ZpZXMgPSBhd2FpdCBQb3N0U2VydmljZS5zZWFyY2hNb3ZpZSh0aGlzLnRleHQpOwogICAgICAgICAgICB0aGlzLnJlc3VsdHNGb3VuZCgpOwogICAgICAgICAgICB0aGlzLnByZXZpb3VzVGV4dCA9IHRoaXMudGV4dDsKICAgICAgICAgICAgdGhpcy5zZWFyY2hpbmcgPSBmYWxzZTsKICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICB0aGlzLnNlcnZlckVycm9yID0gdHJ1ZTsKICAgICAgICAgICAgdGhpcy5zZWFyY2hpbmcgPSBmYWxzZTsKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdGhpcy5jbGlja2FibGUgPSB0cnVlCiAgICAgIH0KICAgIH0sCgogICAgLy9EZWNpZGVzIGlmIHJlc3VsdHMgYXJlIGZvdW5kIGFuZCBhcmUgdG8gYmUgdHJlYXRlZCwgb3IgZG8gZGlzcGxheSBlbXB0eSByZXN1bHQgd2FybmluZwogICAgcmVzdWx0c0ZvdW5kKCkgewogICAgICBpZiAodGhpcy5tb3ZpZXMubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLnByZXZpb3VzVGV4dCA9IHRoaXMudGV4dDsKICAgICAgICB0aGlzLnJlc3VsdFN0YXRlID0gZmFsc2U7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHRoaXMuJHBhcmVudC5kZWJ1Z1N0YXRlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiRm91bmQgZGF0YSIpOwogICAgICAgICAgY29uc29sZS5sb2codGhpcy5tb3ZpZXMpOwogICAgICAgIH0KICAgICAgICB0aGlzLnJlc3VsdFN0YXRlID0gdHJ1ZTsKICAgICAgICB0aGlzLnRyaW1PdXRwdXQoKTsKICAgICAgfQogICAgfSwKCiAgICAvL1RyaW1zIHNvbWUgbW92aWUgbWV0YWRhdGEgc3RyaW5ncyB0byBtYWtlIHRoZW0gZml0IHRoZSBtb3ZpZSB0b29sdGlwCiAgICB0cmltT3V0cHV0KCkgewogICAgICBmb3IgKHZhciBpIGluIHRoaXMubW92aWVzKSB7CiAgICAgICAgdGhpcy5tb3ZpZXNbaV0uUmVsZWFzZSA9CiAgICAgICAgICAiKCIgKyB0aGlzLm1vdmllc1tpXS5SZWxlYXNlLnN1YnN0cmluZygwLCA0KSArICIpIjsKICAgICAgICB0aGlzLm1vdmllc1tpXS5PdmVydmlldyA9CiAgICAgICAgICB0aGlzLm1vdmllc1tpXS5PdmVydmlldy5zdWJzdHJpbmcoMCwgMTAwKSArICIuLi4iOwogICAgICB9CiAgICB9LAoKICAgIC8vU2V0cyBpbWFnZSBzdHlsZQogICAgZ2V0SW1nU3R5bGUodXJsKSB7CiAgICAgIGNvbnN0IGltYWdlUGF0aCA9IHRoaXMuZ2V0UGljVXJsKHVybCk7CiAgICAgIGNvbnN0IGFub3RoZXJPbmUgPSBgdXJsKCIgYCArIGltYWdlUGF0aCArIGAiKWA7CiAgICAgIHJldHVybiB7ICJiYWNrZ3JvdW5kLWltYWdlIjogYW5vdGhlck9uZSB9OwogICAgfSwKCiAgICAvL05lZWRlZCBpbiBvcmRlciB0byBmb3JjZSB2dWUgdG8gcmVjb2duaXplIGR5bmFtaWMgbGlua3MgZXhpc3RhbmNlIGF0IGJ1aWxkLgogICAgZ2V0UGljVXJsKHVybCkgewogICAgICByZXR1cm4gcmVxdWlyZSgiLi4vYXNzZXRzL3Bvc3RlcnMiICsgdXJsKTsKICAgIH0sCgogICAgLy9DcmVhdGVzIHBhdGggZm9yIG5leHQgdmlldyBiYXNlZCBvbiBxdWVyeSBhbmQgY29uZGl0aW9uCiAgICBjb25jYXRQYXRoKGlkKSB7CiAgICAgIHJldHVybiAiL0Jyb3dzZS8iICsgaWQ7CiAgICB9LAoKICAgIC8vQ2hlY2sgaWYgbW92aWUgaGFzIGJlZW4gc2VsZWN0ZWQgZWFybGllci4KICAgIGNoZWNrTGlzdChpZCkgewogICAgICBpZiAodGhpcy4kcGFyZW50LnByZXZpb3VzU2VsZWN0aW9uLmluY2x1ZGVzKGlkKSkgewogICAgICAgIHRoaXMucHJldkVycm9yID0gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRwYXJlbnQucHJldmlvdXNTZWxlY3Rpb24ucHVzaChpZCk7CiAgICAgICAgdGhpcy5uZXh0U2NyZWVuKGlkKTsKICAgICAgfQogICAgfSwKCiAgICAvL0hhbmRsZXMgZW5kIG9mIHZpZXcgYmFzZWQgb24gYnV0dG9uIHByZXNzLiBMb2dzIHNlc3Npb24gaW5mb3JtYXRpb24gdG8gZGF0YWJhc2UgYW5kIHJlcm91dGVzIHRvIGFwcHJvcHJpYXRlIGNvbmRpdGlvbiBiYXNlZCBvbiBnbG9iYWwgdmFyaWFibGUKICAgIG5leHRTY3JlZW4oaWQpIHsKICAgICAgdGhpcy51cGRhdGVTdHVmZigidl9yZWZNb3ZpZV8iICsgdGhpcy4kcGFyZW50Lml0dGVyYXRpb24sIGlkKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goeyBwYXRoOiB0aGlzLmNvbmNhdFBhdGgoaWQpIH0pOwogICAgfSwKCiAgICAvL1VwZGF0ZSBkYXRhYmFzZSB3aXRoIHZhbHVlcy4gcG9zdFNlcnZpY2UgcGFyYW1zOiAgSWQgLSBGaWVsZCAtIFZhbHVlCiAgICBhc3luYyB1cGRhdGVTdHVmZihmaWVsZCwgdmFsdWUpIHsKICAgICAgYXdhaXQgUG9zdFNlcnZpY2UuZ2VuZXJpY1VwZGF0ZSh0aGlzLiRwYXJlbnQuc2Vzc2lvbklkLCBmaWVsZCwgdmFsdWUpOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Search.vue","sourceRoot":"src/views","sourcesContent":["<!--This component handles all searches for movies -->\n<template>\n  <div class=\"Search\">\n    <!--Legend container-->\n    <div class=\"container\">\n      <div class=\"textBox\">\n        <h1>Reference Item Selection</h1>\n        <h2>Step {{ this.$parent.itteration }} of 5</h2>\n        <p>\n          Please search for and select a movie that you have watched and enjoyed\n          at some point. In the following step, we show you other movies that\n          might be interesting for you.\n        </p>\n        <p />\n        <p>You may not select the same movie several times.</p>\n        <p>\n          Note that our survey system only contains a limited number of movies;\n          especially newer movies might be missing. If the movie you would like\n          to select is not available, please try another one.\n        </p>\n      </div>\n    </div>\n\n    <!--Search input container -->\n    <div class=\"container\">\n      <div class=\"searchBox\">\n        <div class=\"searchField\">\n          <input\n            type=\"text\"\n            id=\"inputField\"\n            v-model=\"text\"\n            v-on:keyup=\"keymonitor\"\n            autocomplete=\"off\"\n            placeholder=\"Search for reference movie..\"\n          />\n          <button class=\"searchBtn\" v-on:click=\"searchMovies\">\n            <svg\n              aria-hidden=\"true\"\n              focusable=\"false\"\n              data-prefix=\"fas\"\n              data-icon=\"search\"\n              class=\"searchIcon\"\n              role=\"img\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 512 512\"\n            >\n              <path\n                fill=\"currentColor\"\n                d=\"M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z\"\n              ></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!--Load animation -->\n    <transition name=\"fade\">\n      <div id=\"loading\" v-if=\"searching\">\n        <div class=\"lds-roller\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </transition>\n\n    <!--Result Container -->\n    <div>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div class=\"wrap\" v-if=\"prevError\">\n          <div class=\"errorMsg\">\n            <h1>You cannot select the same movie twice. Please try another.</h1>\n          </div>\n        </div>\n      </transition>\n\n      <transition name=\"fade\" mode=\"out-in\">\n        <!--Displays message if request returned no result or server failure-->\n        <div class=\"wrap\" v-if=\"resultState == false || serverError == true\">\n          <div class=\"errorMsg\" v-if=\"resultState == false\" key=\"noResult\">\n            <h1>No results found for \"{{ previousText }}\".</h1>\n            <p>Check spelling or try another movie.</p>\n          </div>\n          <div class=\"errorMsg\" v-if=\"serverError == true\" key=\"error\">\n            <h1>\n              Problem processing the request, connection to server refused.\n            </h1>\n          </div>\n        </div>\n\n        <!--Displays movies found when searching -->\n        <div v-if=\"resultState\" class=\"movieContainer\" key=\"result\">\n          <div\n            class=\"movie\"\n            v-for=\"(movie, index) in movies\"\n            v-bind:item=\"movie\"\n            v-bind:index=\"index\"\n            v-bind:key=\"movie._id\"\n            v-bind:id=\"movies.Id\"\n          >\n            <div class=\"poster\" :style=\"getImgStyle(movie.Cover_Path)\">\n              <div class=\"tooltip\">\n                <div class=\"toolContainer\">\n                  <p class=\"tooltipText noselect\">placeholder</p>\n                  <!--If it works it's not dumb -->\n                  <p class=\"tooltipText\">{{ movie.Title }}</p>\n                  <p class=\"tooltipText\">{{ movie.Release }}</p>\n                  <p id=\"tooltipOverview\">{{ movie.Overview }}</p>\n                  <button class=\"btnconf\" v-on:click.once=\"checkList(movie.Id)\">\n                    <i class=\"fas fa-check\"></i>Choose as<br />reference movie\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostService from \"../SearchService\";\nexport default {\n  name: \"Search\",\n  data() {\n    return {\n      //Local Variables\n      movies: [],\n      errors: \"\",\n      text: \"\",\n      resultState: undefined,\n      previousText: undefined,\n      searching: false,\n      serverError: false,\n      prevError: false,\n      clickable: true,\n    };\n  },\n\n  methods: {\n    //Allows users to use their enter button with same functionality as search button. Check in place to disable double-click\n    keymonitor: function(event) {\n      if (event.key == \"Enter\" && this.text != this.previousText) {\n        this.searchMovies();\n      }\n    },\n\n    //Call to API with query. Also handles the state of DOM elements such as loading icon. Check in place to disable double-click\n    async searchMovies() {\n      if(this.clickable){\n        this.clickable = false\n        this.prevError = false;\n        if (this.text !== \"\" && this.text != this.previousText) {\n          this.searching = true;\n\n          try {\n            this.movies = await PostService.searchMovie(this.text);\n            this.resultsFound();\n            this.previousText = this.text;\n            this.searching = false;\n          } catch (err) {\n            this.serverError = true;\n            this.searching = false;\n            console.log(err);\n          }\n        }\n        this.clickable = true\n      }\n    },\n\n    //Decides if results are found and are to be treated, or do display empty result warning\n    resultsFound() {\n      if (this.movies.length == 0) {\n        this.previousText = this.text;\n        this.resultState = false;\n      } else {\n        if (this.$parent.debugState) {\n          console.log(\"Found data\");\n          console.log(this.movies);\n        }\n        this.resultState = true;\n        this.trimOutput();\n      }\n    },\n\n    //Trims some movie metadata strings to make them fit the movie tooltip\n    trimOutput() {\n      for (var i in this.movies) {\n        this.movies[i].Release =\n          \"(\" + this.movies[i].Release.substring(0, 4) + \")\";\n        this.movies[i].Overview =\n          this.movies[i].Overview.substring(0, 100) + \"...\";\n      }\n    },\n\n    //Sets image style\n    getImgStyle(url) {\n      const imagePath = this.getPicUrl(url);\n      const anotherOne = `url(\" ` + imagePath + `\")`;\n      return { \"background-image\": anotherOne };\n    },\n\n    //Needed in order to force vue to recognize dynamic links existance at build.\n    getPicUrl(url) {\n      return require(\"../assets/posters\" + url);\n    },\n\n    //Creates path for next view based on query and condition\n    concatPath(id) {\n      return \"/Browse/\" + id;\n    },\n\n    //Check if movie has been selected earlier.\n    checkList(id) {\n      if (this.$parent.previousSelection.includes(id)) {\n        this.prevError = true;\n      } else {\n        this.$parent.previousSelection.push(id);\n        this.nextScreen(id);\n      }\n    },\n\n    //Handles end of view based on button press. Logs session information to database and reroutes to appropriate condition based on global variable\n    nextScreen(id) {\n      this.updateStuff(\"v_refMovie_\" + this.$parent.itteration, id);\n      this.$router.push({ path: this.concatPath(id) });\n    },\n\n    //Update database with values. postService params:  Id - Field - Value\n    async updateStuff(field, value) {\n      await PostService.genericUpdate(this.$parent.sessionId, field, value);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/*Legend Style*/\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.textBox {\n  background-color: black;\n  border: 1px solid white;\n  padding: 10px;\n  max-width: 1200px;\n  display: block;\n}\np,\nh1 {\n  color: white;\n  padding: 5px;\n  text-align: left;\n  white-space: pre-line;\n  text-align: center;\n}\nh1 {\n  font-size: 2em;\n  color: red;\n}\nh2 {\n  font-size: 1.5em;\n  color: white;\n}\n\n/*Search bar */\n.searchBox {\n  margin: 2em;\n  max-width: 80%;\n  display: block;\n}\n.searchField {\n  width: 100%;\n  display: flex;\n}\n#inputField {\n  width: 15em;\n  max-width: 80%;\n  border: 1px solid white;\n  background-color: black;\n  border-right: none;\n  padding: 10px;\n  height: 20px;\n  border-radius: 5px 0 0 5px;\n  outline: none;\n  color: white;\n  font-size: 1.5em;\n}\n.searchBtn {\n  width: 60px;\n  height: 42px;\n  border: 1px solid white;\n  background: white;\n  text-align: center;\n  border-radius: 0 5px 5px 0;\n  cursor: pointer;\n  position: relative;\n  transition: 0.3s;\n}\n.searchBtn:hover {\n  background-color: red;\n  border: 1px solid red;\n}\n.searchIcon {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  height: 50%;\n  transform: translate(-50%, -50%);\n  width: 2em;\n  height: 2em;\n  display: block;\n  color: black;\n}\n\n/*Error Styling */\n.errorMsg {\n  background-color: black;\n  border: 1px solid white;\n  max-width: 1200px;\n}\n.wrap {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/*Movie styling */\n.movieContainer {\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n.movie {\n  height: 100%;\n  width: auto;\n  box-sizing: border-box;\n  margin: 1em;\n}\n.poster {\n  height: 450px;\n  width: 300px;\n  display: inline-block;\n  background-size: cover;\n  transition: 0.2s;\n}\n.toolContainer {\n  height: 100%;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: flex-end;\n}\n.tooltip {\n  height: 100%;\n  width: 100%;\n  color: white;\n  opacity: 0;\n  background-image: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0),\n    rgba(0, 0, 0, 0.9),\n    rgba(0, 0, 0, 1),\n    rgba(0, 0, 0, 1)\n  );\n  display: inline-block;\n  transition: 0.3s;\n}\n.noselect {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n.tooltipText {\n  font-weight: bold;\n  font-size: 1.3em;\n  padding: 0px;\n  margin: 0px;\n}\n.tooltipText:first-child {\n  flex-grow: 3;\n  padding: 5px;\n  color: rgba(0, 0, 0, 0);\n}\n#tooltipOverview {\n  max-height: 20%;\n  max-width: 100%;\n  font-size: 1em;\n}\n.btnconf {\n  padding: 1rem 1.5rem;\n  transition: 0.3s;\n  border-radius: 3px;\n  background-color: #404040;\n  font-size: 1.4em;\n  border: none;\n  color: white;\n  margin: 1em;\n}\n.poster:hover .tooltip {\n  opacity: 1;\n}\n.poster:hover {\n  transform: scale(1.06);\n}\n.btnconf:hover {\n  background-color: darkgray;\n  cursor: pointer;\n}\n/*IE targeting css hack to preserve some DOM order as grid is not supported*/\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n  .movieContainer {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n}\n</style>\n"]}]}