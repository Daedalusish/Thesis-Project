{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue?vue&type=style&index=0&id=903b3ea4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Search.vue","mtime":1590458809490},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLypMZWdlbmQgU3R5bGUqLwojY29udGFpbmVyewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoudGV4dEJveCB7CiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7CiAgb3BhY2l0eTogMC45OwogIGJvcmRlci1zdHlsZTogc29saWQ7CiAgYm9yZGVyLXdpZHRoOiAycHg7CiAgYm9yZGVyLWNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAxMHB4OwogIG1heC13aWR0aDogMTIwMHB4OwogIGRpc3BsYXk6IGJsb2NrOwp9CnAsaDEgewogIGNvbG9yOndoaXRlOwogIHBhZGRpbmc6IDVweDsKICB0ZXh0LWFsaWduOmxlZnQ7CiAgd2hpdGUtc3BhY2U6IHByZS1saW5lOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQpoMXsKICBmb250LXNpemU6MmVtOwogIGNvbG9yOnJlZDsKfQpoMnsKICBmb250LXNpemU6IDEuNWVtOwogIGNvbG9yOiB3aGl0ZQp9CmJ1dHRvbnsKICBwYWRkaW5nOiAxZW07CiAgYm9yZGVyLXJhZGl1czogOHB4OwogIGJhY2tncm91bmQtY29sb3I6ICM0MDQwNDA7CiAgZm9udC1zaXplOiAxZW07CiAgYm9yZGVyOiBub25lOwogIGNvbG9yOiB3aGl0ZTsKfQoKLypTZWFyY2ggYmFyICovCi5zZWFyY2hCb3h7CiAgbWFyZ2luOiAxMHB4Owp9Ci5zZWFyY2hGaWVsZHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGJvcmRlci1yYWRpdXM6IDZweDsKfQojaW5wdXRGaWVsZHsKICBib3JkZXI6bm9uZTsKICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7CiAgaGVpZ2h0OiAxLjJlbTsKICBmb250LXNpemU6IDEuMmVtOwp9CgovKk1vdmllIHN0eWxpbmcgKi8KLm1vdmllQ29udGFpbmVyewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC1nYXA6IDFlbTsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIG1pbm1heCgzMDBweCwgMWZyKSk7Cn0KLm1vdmllewogIGhlaWdodDogMTAwJTsKICB3aWR0aDogYXV0bzsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9Ci5wb3N0ZXJ7CiAgaGVpZ2h0OiA0NTBweDsKICB3aWR0aDogMzAwcHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGJhY2tncm91bmQtc2l6ZTogY292ZXI7Cn0KLnRvb2x0aXB7CiAgaGVpZ2h0OjEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgY29sb3I6IHdoaXRlOwogIGRpc3BsYXk6IG5vbmU7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgcmdiYSgwLDAsMCwwKSwgcmdiYSgwLDAsMCwwLjkpLCByZ2JhKDAsMCwwLDEpLCByZ2JhKDAsMCwwLDEpKQp9Ci5wb3N0ZXI6aG92ZXIgLnRvb2x0aXB7CiAgaGVpZ2h0OjEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHRyYW5zaXRpb246IDJzOwp9Ci50b29sdGlwVGV4dHsKICBmb250LXdlaWdodDogYm9sZDsKICBmb250LXNpemU6IDEsNWVtOwogIHBhZGRpbmc6bm9uZTsKICBwYWRkaW5nLWJvdHRvbTogNXB4Owp9Ci50b29sdGlwVGV4dDpmaXJzdC1jaGlsZHsKICBtYXJnaW4tdG9wOiA2MCU7CiAgcGFkZGluZzpub25lOwp9CiN0b29sdGlwT3ZlcnZpZXd7CiAgbWF4LWhlaWdodDogMjAlOwogIG1heC13aWR0aDogMTAwJTsKICBmb250LXNpemU6IDFlbTsKfQouYnRuY29uZnsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgYm90dG9tOiAwOwogIHRyYW5zaXRpb246IDAuM3M7Cn0KLmJ0bmNvbmY6aG92ZXJ7CiAgYmFja2dyb3VuZC1jb2xvcjpkYXJrZ3JheTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0K"},{"version":3,"sources":["Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Search.vue","sourceRoot":"src/views","sourcesContent":["<!--This component handles all searches for movies -->\n<template>\n  <div class=\"Search\">\n\n    <!--Legend container-->\n    <div id=\"container\">\n      <div class=\"textBox\">\n        <h1>Reference Item Selection</h1>                        \n        <h2>Step {{this.$parent.itteration}} of 5</h2>\n        <p>Please search for and select a movie that you have watched and enjoyed at some point. In the following step, we show you other movies that might be interesting for you.<p/>\n        <p>Note that our survey system only contains a limited number of movies; especially newer movies might be missing. If the movie you would like to select is not available, please try another one.</p>\n      </div>\n    </div>\n\n    <!--Search input container -->\n    <div class=\"searchBox\">\n      <div class=\"searchField\">\n        <i class=\"fas fa-search\"></i>\n        <input type=\"text\" id=\"inputField\" v-model=\"text\" v-on:keyup=\"keymonitor\" placeholder=\"Type a familiar movie here..\">\n      </div>\n      <button class=\"btnconf\" v-on:click=\"searchMovies\">Search</button>\n    </div>\n\n    <!--Load animation -->\n    <transition name=\"fade\">\n      <div id=\"loading\" v-if=\"searching\" mode=\"out-in\">\n        <div class=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n      </div>\n    </transition>\n    \n    <!--Displays message if request returned no result or server failure-->\n    <div>\n      <transition name=\"fade\" mode=\"out-in\">\n        <div v-if=\"resultState == false\">\n          <h1>No results found for \"{{previousText}}\". Try again </h1>\n        </div>\n      </transition>\n        <transition name=\"fade\" mode=\"out-in\">\n          <div v-if=\"serverError== true\">\n            <h1>Problem processing the request, connection to server refused. </h1>\n          </div>\n       </transition>\n       \n       <!--Displays movies found when searching -->\n      <transition name=\"fade\">\n        <div v-if=\"resultState\" class=\"movieContainer\">\n          <div class=\"movie\"  v-for=\"(movie, index) in movies\" v-bind:item=\"movie\" v-bind:index=\"index\" v-bind:key=\"movie._id\" v-bind:id=\"movies.Id\">\n            <div class=\"poster\" :style=\"getImgStyle(movie.Cover_Path)\">\n              <div class=\"tooltip\">\n                <p class=\"tooltipText\">{{movie.Title}}</p>\n                <p class=\"tooltipText\">{{movie.Release}}</p>\n                <p id=\"tooltipOverview\">{{movie.Overview}}</p>\n                <button class=\"btnconf\" v-on:click=\"nextScreen(movie.Id)\"><i class=\"fas fa-check\"></i>Continue with <br> this movie</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PostService from '../SearchService'\nexport default {\n  name: 'Search',\n  data() {\n    return {\n      //Local Variables\n      movies: [],\n      errors: '',\n      text: '',\n      resultState : undefined,\n      previousText: undefined,\n      searching: false,\n      serverError: false,\n    }\n  },\n\n  methods: {\n      \n    //Allows users to use their enter button with same functionality as search button. Check in place to disable double-click  \n    keymonitor: function(event){\n      if(event.key ==\"Enter\" && this.text != this.previousText){\n        this.searchMovies();\n      }\n    },  \n\n    //Call to API with query. Also handles the state of DOM elements such as loading icon. Check in place to disable double-click \n    async searchMovies() {\n      if(this.text !== '' && this.text != this.previousText){\n        this.searching = true\n\n        try{\n          this.movies = await PostService.searchMovie(this.text)\n          this.resultsFound()\n          this.previousText = this.text\n          this.searching = false\n        \n        } catch(err) {\n          this.serverError = true;\n          this.searching = false;\n          console.log(err)\n        }\n      }\n    },\n    \n    //Decides if results are found and are to be treated, or do display empty result warning\n    resultsFound(){\n      if(this.movies.length == 0){\n        this.previousText = this.text\n        this.resultState = false\n      }\n      else{\n        this.resultState = true\n        this.trimOutput()\n      }\n    },\n\n    //Trims some movie metadata strings to make them fit the movie tooltip\n    trimOutput(){\n      for(var i in this.movies){\n        this.movies[i].Release = \"(\" + this.movies[i].Release.substring(0,4) + \")\"\n        this.movies[i].Overview = this.movies[i].Overview.substring(0,100) + \"...\"  \n      }\n    },\n\n    //Sets image style\n    getImgStyle(url){\n      const imagePath = this.getPicUrl(url)\n      const anotherOne = `url(\" `+ imagePath + `\")`\n      return {'background-image': anotherOne}\n    },\n\n    //Needed in order to force vue to recognize dynamic links existance at build.\n    getPicUrl(url){\n        return require('../assets/posters' + url)\n    },\n\n    //Creates path for next view based on query and condition\n    concatPath(id){\n      return  '/Browse/' + id\n    },\n\n    //Handles end of view based on button press. Logs session information to database and reroutes to appropriate condition based on global variable \n    nextScreen(id){\n      this.updateStuff((\"Search\" + this.$parent.itteration),id)\n      this.$router.push({path: this.concatPath(id,)  })\n    },\n\n    //Update database with values. postService params:  Id - Field - Value \n    async updateStuff(field,value){\n      await PostService.genericUpdate(this.$parent.sessionId,field,value)\n    },\n  }\n}\n</script>\n\n<style scoped>\n  /*Legend Style*/\n  #container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .textBox {\n    background-color: black;\n    opacity: 0.9;\n    border-style: solid;\n    border-width: 2px;\n    border-color: white;\n    padding: 10px;\n    max-width: 1200px;\n    display: block;\n  }\n  p,h1 {\n    color:white;\n    padding: 5px;\n    text-align:left;\n    white-space: pre-line;\n    text-align: center;\n  }\n  h1{\n    font-size:2em;\n    color:red;\n  }\n  h2{\n    font-size: 1.5em;\n    color: white\n  }\n  button{\n    padding: 1em;\n    border-radius: 8px;\n    background-color: #404040;\n    font-size: 1em;\n    border: none;\n    color: white;\n  }\n\n  /*Search bar */\n  .searchBox{\n    margin: 10px;\n  }\n  .searchField{\n    background-color: lightgray;\n    display: inline-block;\n    border-radius: 6px;\n  }\n  #inputField{\n    border:none;\n    background-color: lightgray;\n    height: 1.2em;\n    font-size: 1.2em;\n  }\n\n  /*Movie styling */\n  .movieContainer{\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  }\n  .movie{\n    height: 100%;\n    width: auto;\n    box-sizing: border-box;\n  }\n  .poster{\n    height: 450px;\n    width: 300px;\n    display: inline-block;\n    background-size: cover;\n  }\n  .tooltip{\n    height:100%;\n    width: 100%;\n    color: white;\n    display: none;\n    background-image: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.9), rgba(0,0,0,1), rgba(0,0,0,1))\n  }\n  .poster:hover .tooltip{\n    height:100%;\n    width: 100%;\n    display: inline-block;\n    transition: 2s;\n  }\n  .tooltipText{\n    font-weight: bold;\n    font-size: 1,5em;\n    padding:none;\n    padding-bottom: 5px;\n  }\n  .tooltipText:first-child{\n    margin-top: 60%;\n    padding:none;\n  }\n  #tooltipOverview{\n    max-height: 20%;\n    max-width: 100%;\n    font-size: 1em;\n  }\n  .btnconf{\n    position: relative;\n    bottom: 0;\n    transition: 0.3s;\n  }\n  .btnconf:hover{\n    background-color:darkgray;\n    cursor: pointer;\n  }\n</style>"]}]}