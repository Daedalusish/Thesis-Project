{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Browse.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\views\\Browse.vue","mtime":1590060867217},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Browse.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Browse.vue","sourceRoot":"src/views","sourcesContent":["<!--This is condition 1A. This condition has no controll elements, and list order is randomized in every itteration. -->\r\n<template>\r\n  <div id=\"container\">\r\n  <div class=\"Browse\">\r\n    <div class=\"textBox\" v-if=\"[1,2,3].includes(this.$parent.condition)\"><!--Instruction box -->\r\n      <h1>Choosing a Suitable Movie from a Number of Recommendations</h1>\r\n      <h2> Itteration {{this.$parent.itteration}} of 5 </h2>\r\n      <p>Based on the movie that you have selected as a reference movie in the previous step, which is also shown directly below, \r\n        you are now tasked with finding a similar movie that you might enjoy to watch. Please inspect the options presented below for this purpose and select a movie that you would like to watch.<p/>\r\n    </div>\r\n\r\n    <div class=\"textBox\" v-if=\"[4,5,6].includes(this.$parent.condition)\"><!--Instruction box -->\r\n      <div class=\"headerText\">\r\n      <h1>Ordering Recommendations Provided</h1>\r\n      <h1> Itteration {{this.$parent.itteration}} of 5 </h1>\r\n      </div>\r\n      <p>Based on the movie that you have selected as a reference movie in the previous step, which is also shown directly below, \r\n        you are now tasked with ordering the recommendations to your preference from top to bottom. This can be done by dragging the handle icon \"<i class=\"fas fa-arrows-alt-v\"></i>\" up and down.\r\n       When satisfied with the order, please select a movie that you would like to watch to continue.<p/>\r\n    </div>\r\n\r\n  <div id=\"metaContainer\">\r\n    <div id=\"textContainer\">\r\n    <h2>Your Reference Movie:</h2>\r\n    <h3>{{movies[0][\"Metadata\"].Title}}</h3>\r\n    <p style=\"font-weight: bold;\">{{movies[0][\"Metadata\"].Release}}</p>\r\n    <p class = \"metaText\">{{movies[0][\"Metadata\"].Overview}}</p>\r\n    <p class = \"metaText\">Stars: {{movies[0][\"Metadata\"].Actors}}</p>\r\n    <p class = \"metaText\">Director: {{movies[0][\"Metadata\"].Directors}}</p>\r\n    <p class = \"metaText\">Genres: {{movies[0][\"Metadata\"].Genres}}</p>\r\n    </div>\r\n    <div id=\"imageContainer\">\r\n    <div id=\"metaHeader\" :style=\"getImgStyle(movies[0]['Metadata'].Cover_Path)\">\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n    <!--Renders without controll elements, IE conditions 1-3  -->\r\n    <div class=\"recContainer\" v-if=\"[1,2,3].includes(this.$parent.condition)\">\r\n      <div class =\"list\" v-for=\"(list,name) in similarities\" v-bind:item=\"list\" v-bind:key=\"name\">\r\n        <!--p> {{list[0]}}DEBUG ONLY </p-->    \r\n        <!--Movie loop -->\r\n        <div class =\"filmSet\" v-for=\"(filmSet,index) in cut(list[1])\" v-bind:item=\"filmSet\" v-bind:key=\"index\">\r\n\r\n            <div class=\"film\" :style=\"getImgStyle(filmSet.Cover_Path)\">\r\n              <div class=\"tooltip\">\r\n              <p class=\"tooltipText\"> {{filmSet.Title}} </p>\r\n              <button class=\"btnconf\" v-on:click=\"endSession(filmSet.MovieLensID, list[0])\">confirm</button>\r\n              </div>\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Renders with control elements IF conditions are 4-6 -->\r\n    <div class=\"recContainer\" v-if=\"[4,5,6].includes(this.$parent.condition)\">\r\n\r\n      <draggable v-bind=\"dragOptions\" v-model=\"similarities\" class=\"bigger-area\" animation=\"200\" handle=.handle @change=\"checkMove($event)\">\r\n        <div class =\"list\" v-for=\"(list,name) in similarities\" v-bind:item=\"list\" v-bind:key=\"name\">\r\n        <i class=\"fas fa-arrows-alt-v handle\" style=\"font-size:4em;\"></i>  \r\n        <!--Movie loop -->\r\n        <div class =\"filmSet\" v-for=\"(filmSet,index) in cut(list[1])\" v-bind:item=\"filmSet\" v-bind:key=\"index\">\r\n\r\n            <div class=\"film\" :style=\"getImgStyle(filmSet.Cover_Path)\">\r\n              <!--{{filmSet.Title}}\r\n              <button v-on:click=\"endSession(filmSet.MovieLensID, list[0])\">confirm</button>-->\r\n            </div>\r\n\r\n        </div>\r\n      </div>\r\n      </draggable>\r\n    </div>\r\n  \r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PostService from '../SearchService'\r\nimport draggable from 'vuedraggable'\r\n\r\nexport default {\r\n    components: {\r\n    draggable\r\n  },\r\n  /*Local Variables */\r\n  data() {\r\n    return {\r\n      id:this.$route.params.id,\r\n      movies: [],\r\n      similarities: [],\r\n      errors: '',\r\n      text: '',\r\n      listOrder: [],\r\n      moveDistance: 0,\r\n      moveCount: 0,\r\n      browseStart : undefined,\r\n    }\r\n  },\r\n  computed: {\r\n    //config for scrolling variables while dragging\r\n    dragOptions(){\r\n      return {\r\n     scrollSensitivity: \"200\",\r\n     forceFallback: true,\r\n     scrollSpeed: \"30\",\r\n      }\r\n    }\r\n  },\r\n  /* Starts when view is initialized. Retrieves recommender lists based on movie selected. Shuffles afterwards */\r\n  async created() {\r\n    try{\r\n      this.movies = await PostService.getSims(this.id)\r\n      const temp= this.movies[0][\"Similarities\"]\r\n      this.browseStart = Date.now()\r\n      this.trimOutput()\r\n      this.similarities = Object.keys(temp).map((key) => {\r\n        return [String(key), temp[key]];\r\n      })\r\n    } catch(err) {\r\n      console.log(err.message)\r\n    }\r\n    /*Sort list if randomised conditions OR first itteration. condition 1 and 4*/\r\n    if([1,4].includes(this.$parent.condition) || this.$parent.itteration == 1){\r\n      this.similarities = this.shuffle(this.similarities)\r\n    }\r\n    //Sets list order to the order at the end of the previous itteration. Condition 2 and 5\r\n    else if([2,5].includes(this.$parent.condition)){\r\n      this.similarities = this.prevOrder()\r\n    }\r\n    //sorts list order based on weights from previous itterations. Condition 3 and 6\r\n    else if([3,6].includes(this.$parent.condition)){\r\n      this.applyWeights()\r\n    }\r\n  },\r\n  methods: {\r\n    //Logs number of drags and how far it was dragged\r\n    checkMove(evt){\r\n      this.moveCount = this.moveCount + 1;\r\n      this.moveDistance = this.moveDistance + (Math.abs(evt.oldIndex - evt.newIndex))\r\n      console.log(evt)\r\n    },\r\n    trimOutput(){\r\n      var source = this.movies[0][\"Metadata\"]\r\n      this.movies[0][\"Metadata\"].Release = source.Release.substring(0,4)\r\n\r\n      var actorlist = source.Actors.split(',')\r\n      var actorString = \"\"\r\n      if(actorlist.length < 4){\r\n        for(var i in actorlist){\r\n          if(i == 0){\r\n            actorString = actorlist[i]\r\n          }\r\n          else{\r\n          actorString = actorString.concat( \", \" + actorlist[i])\r\n        }\r\n        }\r\n      }\r\n      else{\r\n        for(var x = 0; x < 4; x ++){\r\n                    if(x == 0){\r\n            actorString = actorlist[x]\r\n          }\r\n          else{\r\n          actorString = actorString.concat(\", \" + actorlist[x])\r\n        }\r\n        }\r\n      }\r\n      this.movies[0][\"Metadata\"].Actors = actorString\r\n    },\r\n    /* Sets order to previous itterations order, used by condition 2 and 5*/\r\n     prevOrder(){\r\n          const previousOrder = this.$parent.globalList[this.$parent.itteration-2]\r\n          const tempOrder = []\r\n\r\n          //special handling needed for condition 2\r\n          if(this.$parent.condition == 2){\r\n            for(var p = 0; p < this.similarities.length; p++){\r\n              if(this.$parent.previousSelectedList == this.similarities[p][0]){\r\n                tempOrder.push(this.similarities[p])\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          for(var x= 0; x < previousOrder.length; x++){\r\n            for(var y= 0; y < this.similarities.length; y++){\r\n              if(previousOrder[x] == this.similarities[y][0]){\r\n                if(this.similarities[y][0] !== this.$parent.previousSelectedList){\r\n                  tempOrder.push(this.similarities[y])\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return tempOrder\r\n      },\r\n\r\n    /* Fisher-Yates shuffle of the lists */\r\n    shuffle(arr) {\r\n      var i,\r\n          j,\r\n          temp;\r\n      for (i = arr.length - 1; i > 0; i--) {\r\n          j = Math.floor(Math.random() * (i + 1));\r\n          temp = arr[i];\r\n          arr[i] = arr[j];\r\n          arr[j] = temp;\r\n      }\r\n      return arr;    \r\n    },\r\n\r\n    //\"Hey i'm going to include 10 movies in the dataset what a good idea it is probably super easy to limit output later\".fix\r\n    cut(object) {\r\n      const treated =  Object.keys(object).map((key) => {\r\n          return [String(key), object[key]];\r\n        })\r\n      var halfSplit = {}\r\n      for (var i = 0; i < 5; i++){\r\n        halfSplit[i] = treated[i][1]\r\n      }\r\n      return halfSplit\r\n    },\r\n\r\n    //These two exist because vue is a real bitch with dynamic paths in the build\r\n    getImgStyle(url){\r\n      const imagePath = this.getPicUrl(url)\r\n      const anotherOne = `url(\" `+ imagePath + `\")`\r\n      return {'background-image': anotherOne}\r\n    },\r\n\r\n    getPicUrl(url){\r\n        return require('../assets/posters' + url)\r\n    },\r\n\r\n    /*Update database with values. postService params:  Id - Field - Value */\r\n    async updateStuff(field,value){\r\n      await PostService.genericUpdate(this.$parent.sessionId,field,value)\r\n    },\r\n\r\n    /*Generate a list containing current order of the recs. Index = position, name = name */\r\n    getListOrder(){\r\n      for(var i = 0; i < this.similarities.length; i++){\r\n        this.listOrder.push(this.similarities[i][0])      \r\n        }\r\n    },\r\n\r\n    /* finds position of the list which the movie was selected from */\r\n    getPosition(target){\r\n      for (var j = 0; j < this.listOrder.length; j++){\r\n        if(this.listOrder[j] == target)\r\n          return j\r\n      }\r\n    },\r\n    createWeights(){\r\n      var listObject = []\r\n      for(var x in this.listOrder ){\r\n        listObject[x] = {list : this.listOrder[x], value : (this.listOrder.length-x)/10 }\r\n      }\r\n      this.$parent.weightList = listObject\r\n      console.log(\"created weights\")\r\n      console.log(this.$parent.weightList)\r\n    },\r\n    updateWeights(){\r\n      for(var x in this.listOrder){\r\n        for(var y in this.$parent.weightList){\r\n          if(this.$parent.weightList[y].list == this.listOrder[x]){\r\n            console.log(\"Matching \" + this.$parent.weightList[y].list + \" against \" + this.listOrder[x] )\r\n            console.log(\"value was \" + this.$parent.weightList[y].value)\r\n            this.$parent.weightList[y].value = parseFloat((this.$parent.weightList[y].value + ((this.listOrder.length - x) / 10)).toFixed(2))\r\n            console.log(\"value is now \" + this.$parent.weightList[y].value)\r\n            break\r\n          }\r\n        }\r\n      }\r\n      console.log(\"unsoret\")\r\n      console.log(this.$parent.weightList)\r\n      this.$parent.weightList = this.$parent.weightList.sort((a,b) => (a.value < b.value) ? 1: -1)\r\n      console.log(\"sorted\")\r\n      console.log(this.$parent.weightList)\r\n\r\n    },\r\n    applyWeights(){\r\n      var sortedSim = []\r\n      for(var x in this.$parent.weightList){\r\n        for(var y in this.similarities){\r\n          if(this.$parent.weightList[x].list == this.similarities[y][0]){\r\n            sortedSim.push(this.similarities[y])\r\n            break\r\n          }\r\n        }\r\n      }\r\n      this.similarities = sortedSim\r\n    },\r\n    getTime(){\r\n      return Math.abs((Date.now() - this.browseStart)/1000).toFixed(2)\r\n    },\r\n    /*Browsing end handler. Writes activity to database, then determines what path to chose based on itteration state. */\r\n    endSession(MovieId,selectedList){\r\n        console.log(this.getTime())\r\n        this.getListOrder()\r\n        this.$parent.previousSelectedList = selectedList\r\n        if([3,6].includes(this.$parent.condition)){\r\n          if(this.$parent.itteration == 1){\r\n            this.createWeights()\r\n          }\r\n          else{\r\n            this.updateWeights()\r\n          }\r\n        }\r\n        //Result field\r\n        const result = {\r\n          listOrdering : this.listOrder,\r\n          listSelectedFrom : selectedList,\r\n          movieSelected : MovieId + \".json\",\r\n          moviePosition : this.getPosition(selectedList)\r\n        }\r\n        const fieldName = \"BrowseResult\" + this.$parent.itteration\r\n        this.updateStuff(fieldName,result)\r\n\r\n        //continuation handler\r\n        if(this.$parent.itteration == 5){\r\n            this.$router.push({path:'/Survey'  })\r\n        }\r\n        else {\r\n            this.$parent.globalList[this.$parent.itteration-1] = this.listOrder\r\n            this.$parent.itteration = this.$parent.itteration + 1\r\n\r\n            this.$router.push({path:'/search'  })\r\n        }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n#container{\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.Browse{\r\n  max-width: 1200px;\r\n}\r\n.textBox {\r\n  background-color: black;\r\n  opacity: 0.9;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  border-color: white;\r\n  padding: 10px;\r\n  margin: 10px;\r\n}\r\np,h1 {\r\n  color:white;\r\n  font-size: 1em;\r\n  text-align:left;\r\n  white-space: pre-line;\r\n  margin: 5px;\r\n}\r\n.headerText{\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n}\r\nh1{\r\n  font-size:2em;\r\n  color:red;\r\n}\r\ni{\r\n  color:white;\r\n}\r\nth{\r\n    font-weight: normal;\r\n    color:white;\r\n    font-size:1.25em;\r\n}\r\n#alerter{\r\n  color:red;\r\n}\r\n.recContainer{\r\n  margin:10px\r\n}\r\n.list{\r\n  width:100%;\r\n  display:flex;\r\n  flex-direction: row;\r\n  flex-grow:1;\r\n  justify-content: space-evenly;\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n}\r\n.filmSet{\r\n  height: 340px;\r\n  width:100%;\r\n  max-width: 20%;\r\n  min-width: 15%;\r\n    margin:5px;\r\n}\r\n.film{\r\n  min-height:100%;\r\n  min-width:100%;\r\n  display: inline-block;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  color:black;\r\n}\r\n#metaHeader{\r\n  height: 100%;\r\n  width: 55%;\r\n  display: inline-block;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  color:black;\r\n}\r\nh2{\r\n  color: red;\r\n}\r\nh3{\r\n  color: white;\r\n  font-size: 3em\r\n}\r\n.metaText{\r\n  font-size: 1em;\r\n  padding: 0px;\r\n}\r\n#metaContainer{\r\n  background-color: black;\r\n  opacity: 0.9;\r\n  border-style: solid;\r\n  border-width: 2px;\r\n  border-color: white;\r\n  padding: 10px;\r\n  margin: 10px;\r\n  display: flex;\r\n}\r\n#textContainer{\r\n  width: 50%\r\n}\r\n#imageContainer{\r\n  min-width: 50%;\r\n  min-height: 100%;\r\n}\r\n.tooltip{\r\n  height:100%;\r\n  width: 100%;\r\n  color: white;\r\n  display: none;\r\n  background-image: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.9), rgba(0,0,0,1), rgba(0,0,0,1))\r\n}\r\n.film:hover .tooltip{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n}\r\nbutton{\r\n  padding: 1em;\r\n  border-radius: 8px;\r\n  background-color: #404040;\r\n  font-size: 1em;\r\n  border: none;\r\n  color: white;\r\n}\r\n.btnconf{\r\n  position: relative;\r\n  bottom: 0;\r\n  transition: 0.3s;\r\n}\r\n.btnconf:hover{\r\n  background-color:darkgray;\r\n  cursor: pointer;\r\n\r\n}\r\n</style>"]}]}