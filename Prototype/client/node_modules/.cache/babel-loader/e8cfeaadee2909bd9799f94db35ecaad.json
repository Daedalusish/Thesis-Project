{"remainingRequest":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\SearchService.js","dependencies":[{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\src\\SearchService.js","mtime":1590240913137},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\John Doe\\Desktop\\New folder\\alphaBuild\\client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL0pvaG4gRG9lL0Rlc2t0b3AvTmV3IGZvbGRlci9hbHBoYUJ1aWxkL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0pvaG4gRG9lL0Rlc2t0b3AvTmV3IGZvbGRlci9hbHBoYUJ1aWxkL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzovVXNlcnMvSm9obiBEb2UvRGVza3RvcC9OZXcgZm9sZGVyL2FscGhhQnVpbGQvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvSm9obiBEb2UvRGVza3RvcC9OZXcgZm9sZGVyL2FscGhhQnVpbGQvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgovKiBlc2xpbnQtZGlzYWJsZSBuby1hc3luYy1wcm9taXNlLWV4ZWN1dG9yICovCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIERFVgovL2NvbnN0IHVybCA9J2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGknCi8vUFJPRAoKdmFyIHVybCA9ICdhcGknOwoKdmFyIFBvc3RTZXJ2aWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBQb3N0U2VydmljZSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQb3N0U2VydmljZSk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUG9zdFNlcnZpY2UsIG51bGwsIFt7CiAgICBrZXk6ICJzZWFyY2hNb3ZpZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VhcmNoTW92aWUocXVlcnkpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgdmFyIHJlcywgZGF0YTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybC5jb25jYXQoJy9zZWFyY2gvJywgcXVlcnkpKTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLm1hcChmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCByZXN1bHRzKTsKICAgICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDg7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICAgIHJlamVjdChfY29udGV4dC50MCk7CgogICAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDhdXSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIpIHsKICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZXRTaW1zIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRTaW1zKHF1ZXJ5KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgdmFyIHJlcywgZGF0YTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMDsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybC5jb25jYXQoJy9nZXRTaW0vJywgcXVlcnkpKTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgICBkYXRhID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgICAgIHJlc29sdmUoZGF0YS5tYXAoZnVuY3Rpb24gKHJlc3VsdHMpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgcmVzdWx0cyk7CiAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgICAgcmVqZWN0KF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gzLCBfeDQpIHsKICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZ2V0Q29uZGl0aW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDb25kaXRpb24oKSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3JlZjMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgICAgdmFyIHJlcywgZGF0YTsKICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzOwogICAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHVybC5jb25jYXQoJy9nZXRDb25kaXRpb24vJykpOwoKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICAgIGRhdGEgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgICAgcmVzb2x2ZShkYXRhLm1hcChmdW5jdGlvbiAocmVzdWx0cykgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCByZXN1bHRzKTsKICAgICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gODsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgICByZWplY3QoX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1swLCA4XV0pOwogICAgICAgIH0pKTsKCiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDUsIF94NikgewogICAgICAgICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJjcmVhdGVTZXNzaW9uIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVTZXNzaW9uKGlkLCBjb25kaXRpb24sIHBhc3NlZEZpcnN0VGVzdCkgewogICAgICByZXR1cm4gYXhpb3MucG9zdCh1cmwuY29uY2F0KCcvY3JlYXRlU2Vzc2lvbi8nKSwgewogICAgICAgIGlkOiBpZCwKICAgICAgICBjb25kaXRpb246IGNvbmRpdGlvbiwKICAgICAgICBwYXNzZWRGaXJzdFRlc3Q6IHBhc3NlZEZpcnN0VGVzdAogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJnZW5lcmljVXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZW5lcmljVXBkYXRlKGlkLCBmaWVsZCwgdmFsdWUpIHsKICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLmNvbmNhdCgnL2dlbmVyaWNVcGRhdGUvJyksIHsKICAgICAgICBpZDogaWQsCiAgICAgICAgdmFsdWU6IHZhbHVlLAogICAgICAgIGZpZWxkOiBmaWVsZAogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQb3N0U2VydmljZTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgUG9zdFNlcnZpY2U7"},{"version":3,"sources":["C:/Users/John Doe/Desktop/New folder/alphaBuild/client/src/SearchService.js"],"names":["axios","url","PostService","query","Promise","resolve","reject","get","concat","res","data","map","results","id","condition","passedFirstTest","post","field","value"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AACA,IAAMC,GAAG,GAAG,KAAZ;;IAEMC,W;;;;;;;gCACiBC,K,EAAO;AACtB,aAAO,IAAIC,OAAJ;AAAA,2EAAY,iBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEON,KAAK,CAACO,GAAN,CAAUN,GAAG,CAACO,MAAJ,CAAW,UAAX,EAAsBL,KAAtB,CAAV,CAFP;;AAAA;AAELM,kBAAAA,GAFK;AAGLC,kBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;AAKXL,kBAAAA,OAAO,CACHK,IAAI,CAACC,GAAL,CAAS,UAAAC,OAAO;AAAA,6CACTA,OADS;AAAA,mBAAhB,CADG,CAAP;AALW;AAAA;;AAAA;AAAA;AAAA;AAWXN,kBAAAA,MAAM,aAAN;;AAXW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAcH;;;4BACcH,K,EAAO;AAClB,aAAO,IAAIC,OAAJ;AAAA,4EAAY,kBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEON,KAAK,CAACO,GAAN,CAAUN,GAAG,CAACO,MAAJ,CAAW,UAAX,EAAsBL,KAAtB,CAAV,CAFP;;AAAA;AAELM,kBAAAA,GAFK;AAGLC,kBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;AAIXL,kBAAAA,OAAO,CACHK,IAAI,CAACC,GAAL,CAAS,UAAAC,OAAO;AAAA,6CACTA,OADS;AAAA,mBAAhB,CADG,CAAP;AAJW;AAAA;;AAAA;AAAA;AAAA;AAUXN,kBAAAA,MAAM,cAAN;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;;mCACqB;AAClB,aAAO,IAAIF,OAAJ;AAAA,4EAAY,kBAAMC,OAAN,EAAeC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEON,KAAK,CAACO,GAAN,CAAUN,GAAG,CAACO,MAAJ,CAAW,gBAAX,CAAV,CAFP;;AAAA;AAELC,kBAAAA,GAFK;AAGLC,kBAAAA,IAHK,GAGED,GAAG,CAACC,IAHN;AAIXL,kBAAAA,OAAO,CACHK,IAAI,CAACC,GAAL,CAAS,UAAAC,OAAO;AAAA,6CACTA,OADS;AAAA,mBAAhB,CADG,CAAP;AAJW;AAAA;;AAAA;AAAA;AAAA;AAUXN,kBAAAA,MAAM,cAAN;;AAVW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH;;;kCACoBO,E,EAAGC,S,EAAUC,e,EAAiB;AAC/C,aAAOf,KAAK,CAACgB,IAAN,CAAWf,GAAG,CAACO,MAAJ,CAAW,iBAAX,CAAX,EAA0C;AAC7CK,QAAAA,EAAE,EAAFA,EAD6C;AACzCC,QAAAA,SAAS,EAATA,SADyC;AAC9BC,QAAAA,eAAe,EAAfA;AAD8B,OAA1C,CAAP;AAGH;;;kCACoBF,E,EAAGI,K,EAAMC,K,EAAO;AACjC,aAAOlB,KAAK,CAACgB,IAAN,CAAWf,GAAG,CAACO,MAAJ,CAAW,iBAAX,CAAX,EAA0C;AAC7CK,QAAAA,EAAE,EAAFA,EAD6C;AACzCK,QAAAA,KAAK,EAALA,KADyC;AAClCD,QAAAA,KAAK,EAALA;AADkC,OAA1C,CAAP;AAGH;;;;;;AAEL,eAAef,WAAf","sourcesContent":["/* eslint-disable no-async-promise-executor */\r\nimport axios from 'axios';\r\n\r\n// DEV\r\n//const url ='http://localhost:5000/api'\r\n//PROD\r\nconst url = 'api'\r\n\r\nclass PostService {\r\n    static searchMovie(query) {\r\n        return new Promise(async(resolve, reject) => {\r\n            try{\r\n                const res = await axios.get(url.concat('/search/',query))\r\n                const data = res.data;\r\n\r\n                resolve(\r\n                    data.map(results => ({\r\n                        ...results\r\n                    }))\r\n                );\r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    }\r\n    static getSims(query) {\r\n        return new Promise(async(resolve, reject) => {\r\n            try{\r\n                const res = await axios.get(url.concat('/getSim/',query))\r\n                const data = res.data;\r\n                resolve(\r\n                    data.map(results => ({\r\n                        ...results\r\n                    }))\r\n                ); \r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    }\r\n    static getCondition() {\r\n        return new Promise(async(resolve, reject) => {\r\n            try{\r\n                const res = await axios.get(url.concat('/getCondition/'))\r\n                const data = res.data;\r\n                resolve(\r\n                    data.map(results => ({\r\n                        ...results\r\n                    }))\r\n                ); \r\n            } catch(err) {\r\n                reject(err)\r\n            }\r\n        })\r\n    }\r\n    static createSession(id,condition,passedFirstTest) {\r\n        return axios.post(url.concat('/createSession/'), {\r\n            id, condition, passedFirstTest\r\n       });\r\n    }\r\n    static genericUpdate(id,field,value) {\r\n        return axios.post(url.concat('/genericUpdate/'), {\r\n            id, value, field\r\n        })\r\n    }\r\n}\r\nexport default PostService"]}]}